//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Doopec.Configuration
{
    
    
    /// <summary>
    /// The DDSConfigurationSection Configuration Section.
    /// </summary>
    public partial class DDSConfigurationSection : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the DDSConfigurationSection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string DDSConfigurationSectionSectionName = "DDS";
        
        /// <summary>
        /// The XML path of the DDSConfigurationSection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string DDSConfigurationSectionSectionPath = "DDS";
        
        /// <summary>
        /// Gets the DDSConfigurationSection instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public static global::Doopec.Configuration.DDSConfigurationSection Instance
        {
            get
            {
                return ((global::Doopec.Configuration.DDSConfigurationSection)(global::System.Configuration.ConfigurationManager.GetSection(global::Doopec.Configuration.DDSConfigurationSection.DDSConfigurationSectionSectionPath)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.DDSConfigurationSection.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::Doopec.Configuration.DDSConfigurationSection.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Version Property
        /// <summary>
        /// The XML name of the <see cref="Version"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string VersionPropertyName = "version";
        
        /// <summary>
        /// Gets or sets the Version.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Version.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.DDSConfigurationSection.VersionPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string Version
        {
            get
            {
                return ((string)(base[global::Doopec.Configuration.DDSConfigurationSection.VersionPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.DDSConfigurationSection.VersionPropertyName] = value;
            }
        }
        #endregion
        
        #region Vendor Property
        /// <summary>
        /// The XML name of the <see cref="Vendor"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string VendorPropertyName = "vendor";
        
        /// <summary>
        /// Gets or sets the Vendor.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Vendor.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.DDSConfigurationSection.VendorPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string Vendor
        {
            get
            {
                return ((string)(base[global::Doopec.Configuration.DDSConfigurationSection.VendorPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.DDSConfigurationSection.VendorPropertyName] = value;
            }
        }
        #endregion
        
        #region Domains Property
        /// <summary>
        /// The XML name of the <see cref="Domains"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string DomainsPropertyName = "domains";
        
        /// <summary>
        /// Gets or sets the Domains.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Domains.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.DDSConfigurationSection.DomainsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.Domains Domains
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.Domains)(base[global::Doopec.Configuration.DDSConfigurationSection.DomainsPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.DDSConfigurationSection.DomainsPropertyName] = value;
            }
        }
        #endregion
        
        #region LogLevel Property
        /// <summary>
        /// The XML name of the <see cref="LogLevel"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string LogLevelPropertyName = "logLevel";
        
        /// <summary>
        /// Gets or sets the LogLevel.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The LogLevel.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.DDSConfigurationSection.LogLevelPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.Log4NetLevel LogLevel
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.Log4NetLevel)(base[global::Doopec.Configuration.DDSConfigurationSection.LogLevelPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.DDSConfigurationSection.LogLevelPropertyName] = value;
            }
        }
        #endregion
        
        #region BoostrapType Property
        /// <summary>
        /// The XML name of the <see cref="BoostrapType"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string BoostrapTypePropertyName = "boostrapType";
        
        /// <summary>
        /// Gets or sets the BoostrapType.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The BoostrapType.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.DDSConfigurationSection.BoostrapTypePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.BoostrapType BoostrapType
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.BoostrapType)(base[global::Doopec.Configuration.DDSConfigurationSection.BoostrapTypePropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.DDSConfigurationSection.BoostrapTypePropertyName] = value;
            }
        }
        #endregion
        
        #region QoSProfiles Property
        /// <summary>
        /// The XML name of the <see cref="QoSProfiles"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string QoSProfilesPropertyName = "qoSProfiles";
        
        /// <summary>
        /// Gets or sets the QoSProfiles.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The QoSProfiles.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.DDSConfigurationSection.QoSProfilesPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSProfiles QoSProfiles
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSProfiles)(base[global::Doopec.Configuration.DDSConfigurationSection.QoSProfilesPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.DDSConfigurationSection.QoSProfilesPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration
{
    
    
    /// <summary>
    /// The RTPSConfigurationSection Configuration Section.
    /// </summary>
    public partial class RTPSConfigurationSection : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the RTPSConfigurationSection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string RTPSConfigurationSectionSectionName = "RTPS";
        
        /// <summary>
        /// The XML path of the RTPSConfigurationSection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string RTPSConfigurationSectionSectionPath = "RTPS";
        
        /// <summary>
        /// Gets the RTPSConfigurationSection instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public static global::Doopec.Configuration.RTPSConfigurationSection Instance
        {
            get
            {
                return ((global::Doopec.Configuration.RTPSConfigurationSection)(global::System.Configuration.ConfigurationManager.GetSection(global::Doopec.Configuration.RTPSConfigurationSection.RTPSConfigurationSectionSectionPath)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.RTPSConfigurationSection.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::Doopec.Configuration.RTPSConfigurationSection.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Transports Property
        /// <summary>
        /// The XML name of the <see cref="Transports"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string TransportsPropertyName = "transports";
        
        /// <summary>
        /// Gets or sets the Transports.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Transports.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.RTPSConfigurationSection.TransportsPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Rtps.Transports Transports
        {
            get
            {
                return ((global::Doopec.Configuration.Rtps.Transports)(base[global::Doopec.Configuration.RTPSConfigurationSection.TransportsPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.RTPSConfigurationSection.TransportsPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Rtps
{
    
    
    /// <summary>
    /// The Transport Configuration Element.
    /// </summary>
    public partial class Transport : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Rtps.Transport.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false, DefaultValue="")]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::Doopec.Configuration.Rtps.Transport.NamePropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Rtps.Transport.NamePropertyName] = value;
            }
        }
        #endregion
        
        #region Type Property
        /// <summary>
        /// The XML name of the <see cref="Type"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string TypePropertyName = "type";
        
        /// <summary>
        /// Gets or sets the Type.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Type.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Rtps.Transport.TypePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string Type
        {
            get
            {
                return ((string)(base[global::Doopec.Configuration.Rtps.Transport.TypePropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Rtps.Transport.TypePropertyName] = value;
            }
        }
        #endregion
        
        #region TTL Property
        /// <summary>
        /// The XML name of the <see cref="TTL"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string TTLPropertyName = "ttl";
        
        /// <summary>
        /// Gets or sets the value of the Time-To-Live (TTL) field of multicast datagrams sent as part of discovery. This value specifies the number of hops the datagram will traverse before being discarded by the network. he default value of 1 means that all data is restricted to the local network subnet.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute(@"The value of the Time-To-Live (TTL) field of multicast datagrams sent as part of discovery. This value specifies the number of hops the datagram will traverse before being discarded by the network. he default value of 1 means that all data is restricted to the local network subnet.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Rtps.Transport.TTLPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Rtps.TTL TTL
        {
            get
            {
                return ((global::Doopec.Configuration.Rtps.TTL)(base[global::Doopec.Configuration.Rtps.Transport.TTLPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Rtps.Transport.TTLPropertyName] = value;
            }
        }
        #endregion
        
        #region Discovery Property
        /// <summary>
        /// The XML name of the <see cref="Discovery"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string DiscoveryPropertyName = "discovery";
        
        /// <summary>
        /// Gets or sets the Discovery.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Discovery.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Rtps.Transport.DiscoveryPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Rtps.Discovery Discovery
        {
            get
            {
                return ((global::Doopec.Configuration.Rtps.Discovery)(base[global::Doopec.Configuration.Rtps.Transport.DiscoveryPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Rtps.Transport.DiscoveryPropertyName] = value;
            }
        }
        #endregion
        
        #region RtpsWriter Property
        /// <summary>
        /// The XML name of the <see cref="RtpsWriter"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string RtpsWriterPropertyName = "rtpsWriter";
        
        /// <summary>
        /// Gets or sets the RtpsWriter.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The RtpsWriter.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Rtps.Transport.RtpsWriterPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Rtps.RtpsWriter RtpsWriter
        {
            get
            {
                return ((global::Doopec.Configuration.Rtps.RtpsWriter)(base[global::Doopec.Configuration.Rtps.Transport.RtpsWriterPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Rtps.Transport.RtpsWriterPropertyName] = value;
            }
        }
        #endregion
        
        #region RtpsReader Property
        /// <summary>
        /// The XML name of the <see cref="RtpsReader"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string RtpsReaderPropertyName = "rtpsReader";
        
        /// <summary>
        /// Gets or sets the RtpsReader.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The RtpsReader.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Rtps.Transport.RtpsReaderPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Rtps.RtpsReader RtpsReader
        {
            get
            {
                return ((global::Doopec.Configuration.Rtps.RtpsReader)(base[global::Doopec.Configuration.Rtps.Transport.RtpsReaderPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Rtps.Transport.RtpsReaderPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Rtps
{
    
    
    /// <summary>
    /// A collection of Transport instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Doopec.Configuration.Rtps.Transport), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::Doopec.Configuration.Rtps.Transports.TransportPropertyName)]
    public partial class Transports : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Doopec.Configuration.Rtps.Transport"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string TransportPropertyName = "transport";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override string ElementName
        {
            get
            {
                return global::Doopec.Configuration.Rtps.Transports.TransportPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Doopec.Configuration.Rtps.Transports.TransportPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Doopec.Configuration.Rtps.Transport)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Doopec.Configuration.Rtps.Transport"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Doopec.Configuration.Rtps.Transport"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Doopec.Configuration.Rtps.Transport();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Doopec.Configuration.Rtps.Transport"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Doopec.Configuration.Rtps.Transport"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Doopec.Configuration.Rtps.Transport this[int index]
        {
            get
            {
                return ((global::Doopec.Configuration.Rtps.Transport)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Doopec.Configuration.Rtps.Transport"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Doopec.Configuration.Rtps.Transport"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Doopec.Configuration.Rtps.Transport this[object name]
        {
            get
            {
                return ((global::Doopec.Configuration.Rtps.Transport)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Doopec.Configuration.Rtps.Transport"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="transport">The <see cref="global::Doopec.Configuration.Rtps.Transport"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Add(global::Doopec.Configuration.Rtps.Transport transport)
        {
            base.BaseAdd(transport);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Doopec.Configuration.Rtps.Transport"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="transport">The <see cref="global::Doopec.Configuration.Rtps.Transport"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Remove(global::Doopec.Configuration.Rtps.Transport transport)
        {
            base.BaseRemove(this.GetElementKey(transport));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Doopec.Configuration.Rtps.Transport"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Doopec.Configuration.Rtps.Transport"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Doopec.Configuration.Rtps.Transport GetItemAt(int index)
        {
            return ((global::Doopec.Configuration.Rtps.Transport)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Doopec.Configuration.Rtps.Transport"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Doopec.Configuration.Rtps.Transport"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Doopec.Configuration.Rtps.Transport GetItemByKey(string name)
        {
            return ((global::Doopec.Configuration.Rtps.Transport)(base.BaseGet(((object)(name)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace Doopec.Configuration.Dds
{
    
    
    /// <summary>
    /// A collection of DomainParticipant instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Doopec.Configuration.Dds.DomainParticipant), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::Doopec.Configuration.Dds.Domains.DomainParticipantPropertyName)]
    public partial class Domains : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Doopec.Configuration.Dds.DomainParticipant"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string DomainParticipantPropertyName = "domain";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override string ElementName
        {
            get
            {
                return global::Doopec.Configuration.Dds.Domains.DomainParticipantPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Doopec.Configuration.Dds.Domains.DomainParticipantPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Doopec.Configuration.Dds.DomainParticipant)(element)).Id;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Doopec.Configuration.Dds.DomainParticipant"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Doopec.Configuration.Dds.DomainParticipant"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Doopec.Configuration.Dds.DomainParticipant();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Doopec.Configuration.Dds.DomainParticipant"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Doopec.Configuration.Dds.DomainParticipant"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Doopec.Configuration.Dds.DomainParticipant this[int index]
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.DomainParticipant)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Doopec.Configuration.Dds.DomainParticipant"/> with the specified key.
        /// </summary>
        /// <param name="id">The key of the <see cref="global::Doopec.Configuration.Dds.DomainParticipant"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Doopec.Configuration.Dds.DomainParticipant this[object id]
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.DomainParticipant)(base.BaseGet(id)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Doopec.Configuration.Dds.DomainParticipant"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="domain">The <see cref="global::Doopec.Configuration.Dds.DomainParticipant"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Add(global::Doopec.Configuration.Dds.DomainParticipant domain)
        {
            base.BaseAdd(domain);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Doopec.Configuration.Dds.DomainParticipant"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="domain">The <see cref="global::Doopec.Configuration.Dds.DomainParticipant"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Remove(global::Doopec.Configuration.Dds.DomainParticipant domain)
        {
            base.BaseRemove(this.GetElementKey(domain));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Doopec.Configuration.Dds.DomainParticipant"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Doopec.Configuration.Dds.DomainParticipant"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Doopec.Configuration.Dds.DomainParticipant GetItemAt(int index)
        {
            return ((global::Doopec.Configuration.Dds.DomainParticipant)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Doopec.Configuration.Dds.DomainParticipant"/> with the specified key.
        /// </summary>
        /// <param name="id">The key of the <see cref="global::Doopec.Configuration.Dds.DomainParticipant"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Doopec.Configuration.Dds.DomainParticipant GetItemByKey(int id)
        {
            return ((global::Doopec.Configuration.Dds.DomainParticipant)(base.BaseGet(((object)(id)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace Doopec.Configuration.Dds
{
    
    
    /// <summary>
    /// The DomainParticipant Configuration Element.
    /// </summary>
    public partial class DomainParticipant : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.ComponentModel.ReadOnlyAttribute(true)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.DomainParticipant.NamePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue="")]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::Doopec.Configuration.Dds.DomainParticipant.NamePropertyName]));
            }
        }
        #endregion
        
        #region Id Property
        /// <summary>
        /// The XML name of the <see cref="Id"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string IdPropertyName = "id";
        
        /// <summary>
        /// Gets or sets domain IDs should be between 0 and 231 (inclusive) due to the way UDP ports are assigned to domain IDs. In each  process, up to 120 domain participants are supported in each domain
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("Domain IDs should be between 0 and 231 (inclusive) due to the way UDP ports are a" +
            "ssigned to domain IDs. In each  process, up to 120 domain participants are suppo" +
            "rted in each domain")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.DomainParticipant.IdPropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false, DefaultValue=0)]
        public virtual int Id
        {
            get
            {
                return ((int)(base[global::Doopec.Configuration.Dds.DomainParticipant.IdPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.DomainParticipant.IdPropertyName] = value;
            }
        }
        #endregion
        
        #region TransportProfile Property
        /// <summary>
        /// The XML name of the <see cref="TransportProfile"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string TransportProfilePropertyName = "transportProfile";
        
        /// <summary>
        /// Gets or sets the TransportProfile.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The TransportProfile.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.DomainParticipant.TransportProfilePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.TransportProfile TransportProfile
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.TransportProfile)(base[global::Doopec.Configuration.Dds.DomainParticipant.TransportProfilePropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.DomainParticipant.TransportProfilePropertyName] = value;
            }
        }
        #endregion
        
        #region QoSProfile Property
        /// <summary>
        /// The XML name of the <see cref="QoSProfile"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string QoSProfilePropertyName = "qoSProfile";
        
        /// <summary>
        /// Gets or sets the QoSProfile.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The QoSProfile.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.DomainParticipant.QoSProfilePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSProfile QoSProfile
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSProfile)(base[global::Doopec.Configuration.Dds.DomainParticipant.QoSProfilePropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.DomainParticipant.QoSProfilePropertyName] = value;
            }
        }
        #endregion
        
        #region Guid Property
        /// <summary>
        /// The XML name of the <see cref="Guid"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string GuidPropertyName = "guid";
        
        /// <summary>
        /// Gets or sets the Guid.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Guid.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.DomainParticipant.GuidPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.GuiKind Guid
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.GuiKind)(base[global::Doopec.Configuration.Dds.DomainParticipant.GuidPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.DomainParticipant.GuidPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Dds
{
    
    
    /// <summary>
    /// The Log4NetLevel Configuration Element.
    /// </summary>
    public partial class Log4NetLevel : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region LevelMin Property
        /// <summary>
        /// The XML name of the <see cref="LevelMin"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string LevelMinPropertyName = "levelMin";
        
        /// <summary>
        /// Gets or sets the LevelMin.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The LevelMin.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.Log4NetLevel.LevelMinPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false, DefaultValue=Configuration.LogLevel.ALL)]
        public virtual global::Doopec.Configuration.LogLevel LevelMin
        {
            get
            {
                return ((global::Doopec.Configuration.LogLevel)(base[global::Doopec.Configuration.Dds.Log4NetLevel.LevelMinPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.Log4NetLevel.LevelMinPropertyName] = value;
            }
        }
        #endregion
        
        #region LevelMax Property
        /// <summary>
        /// The XML name of the <see cref="LevelMax"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string LevelMaxPropertyName = "levelMax";
        
        /// <summary>
        /// Gets or sets the LevelMax.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The LevelMax.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.Log4NetLevel.LevelMaxPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=Configuration.LogLevel.FATAL)]
        public virtual global::Doopec.Configuration.LogLevel LevelMax
        {
            get
            {
                return ((global::Doopec.Configuration.LogLevel)(base[global::Doopec.Configuration.Dds.Log4NetLevel.LevelMaxPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.Log4NetLevel.LevelMaxPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Rtps
{
    
    
    /// <summary>
    /// The Discovery Configuration Element.
    /// </summary>
    public partial class Discovery : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Rtps.Discovery.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false, DefaultValue="")]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::Doopec.Configuration.Rtps.Discovery.NamePropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Rtps.Discovery.NamePropertyName] = value;
            }
        }
        #endregion
        
        #region ResendPeriod Property
        /// <summary>
        /// The XML name of the <see cref="ResendPeriod"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ResendPeriodPropertyName = "resendPeriod";
        
        /// <summary>
        /// Gets or sets the number of seconds that a process waits between the announcement of participants (see section 8.5.3 in the OMG DDS-RTPS specification  for details).
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The number of seconds that a process waits between the announcement of participan" +
            "ts (see section 8.5.3 in the OMG DDS-RTPS specification  for details).")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Rtps.Discovery.ResendPeriodPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Rtps.ResendPeriod ResendPeriod
        {
            get
            {
                return ((global::Doopec.Configuration.Rtps.ResendPeriod)(base[global::Doopec.Configuration.Rtps.Discovery.ResendPeriodPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Rtps.Discovery.ResendPeriodPropertyName] = value;
            }
        }
        #endregion
        
        #region PortBase Property
        /// <summary>
        /// The XML name of the <see cref="PortBase"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string PortBasePropertyName = "portBase";
        
        /// <summary>
        /// Gets or sets port Base number. This number sets the starting point for deriving port numbers used for Simple Endpoint Discovery Protocol (SEDP). This property is used in conjunction with DG, PG, D0, and D1 to construct the necessary Endpoints for RTPS discovery communication. (see section 9.6.1.1 in the OMG DDS-RTPS specification in how these Endpoints are constructed)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute(@"Port Base number. This number sets the starting point for deriving port numbers used for Simple Endpoint Discovery Protocol (SEDP). This property is used in conjunction with DG, PG, D0, and D1 to construct the necessary Endpoints for RTPS discovery communication. (see section 9.6.1.1 in the OMG DDS-RTPS specification in how these Endpoints are constructed)")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Rtps.Discovery.PortBasePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Rtps.PortBase PortBase
        {
            get
            {
                return ((global::Doopec.Configuration.Rtps.PortBase)(base[global::Doopec.Configuration.Rtps.Discovery.PortBasePropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Rtps.Discovery.PortBasePropertyName] = value;
            }
        }
        #endregion
        
        #region DomainGain Property
        /// <summary>
        /// The XML name of the <see cref="DomainGain"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string DomainGainPropertyName = "domainGain";
        
        /// <summary>
        /// Gets or sets an integer value representing the Domain Gain. This is a multiplier that assists in formulating Multicast or Unicast ports for RTPS.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("An integer value representing the Domain Gain. This is a multiplier that assists " +
            "in formulating Multicast or Unicast ports for RTPS.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Rtps.Discovery.DomainGainPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Rtps.PortGain DomainGain
        {
            get
            {
                return ((global::Doopec.Configuration.Rtps.PortGain)(base[global::Doopec.Configuration.Rtps.Discovery.DomainGainPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Rtps.Discovery.DomainGainPropertyName] = value;
            }
        }
        #endregion
        
        #region OffsetMetatrafficUnicast Property
        /// <summary>
        /// The XML name of the <see cref="OffsetMetatrafficUnicast"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string OffsetMetatrafficUnicastPropertyName = "offsetMetatrafficUnicast";
        
        /// <summary>
        /// Gets or sets d0. An integer value that assists in providing an offset for calculating an assignable port in SPDP Multicast configurations. The formula used is: PB + DG * domainId + d0 (see section 9.6.1.1 in the OMG DDS-RTPS specification in how these Endpoints are constructed)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute(@"D0. An integer value that assists in providing an offset for calculating an assignable port in SPDP Multicast configurations. The formula used is: PB + DG * domainId + d0 (see section 9.6.1.1 in the OMG DDS-RTPS specification in how these Endpoints are constructed)")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Rtps.Discovery.OffsetMetatrafficUnicastPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Rtps.OffsetUnicast OffsetMetatrafficUnicast
        {
            get
            {
                return ((global::Doopec.Configuration.Rtps.OffsetUnicast)(base[global::Doopec.Configuration.Rtps.Discovery.OffsetMetatrafficUnicastPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Rtps.Discovery.OffsetMetatrafficUnicastPropertyName] = value;
            }
        }
        #endregion
        
        #region OffsetMetatrafficMulticast Property
        /// <summary>
        /// The XML name of the <see cref="OffsetMetatrafficMulticast"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string OffsetMetatrafficMulticastPropertyName = "offsetMetatrafficMulticast";
        
        /// <summary>
        /// Gets or sets d1. An integer value that assists in providing an offset for calculating an assignable port in SPDP Unicast configurations. The formula used is: PB + DG * domainId + d1 + PG * participantId (see section 9.6.1.1 in the OMG DDS-RTPS specification in how these Endpoints are constructed)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute(@"D1. An integer value that assists in providing an offset for calculating an assignable port in SPDP Unicast configurations. The formula used is: PB + DG * domainId + d1 + PG * participantId (see section 9.6.1.1 in the OMG DDS-RTPS specification in how these Endpoints are constructed)")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Rtps.Discovery.OffsetMetatrafficMulticastPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Rtps.OffsetMulticast OffsetMetatrafficMulticast
        {
            get
            {
                return ((global::Doopec.Configuration.Rtps.OffsetMulticast)(base[global::Doopec.Configuration.Rtps.Discovery.OffsetMetatrafficMulticastPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Rtps.Discovery.OffsetMetatrafficMulticastPropertyName] = value;
            }
        }
        #endregion
        
        #region UseSedpMulticast Property
        /// <summary>
        /// The XML name of the <see cref="UseSedpMulticast"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string UseSedpMulticastPropertyName = "useSedpMulticast";
        
        /// <summary>
        /// Gets or sets the UseSedpMulticast.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The UseSedpMulticast.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Rtps.Discovery.UseSedpMulticastPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Rtps.UseSedpMulticast UseSedpMulticast
        {
            get
            {
                return ((global::Doopec.Configuration.Rtps.UseSedpMulticast)(base[global::Doopec.Configuration.Rtps.Discovery.UseSedpMulticastPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Rtps.Discovery.UseSedpMulticastPropertyName] = value;
            }
        }
        #endregion
        
        #region MetatrafficUnicastLocatorList Property
        /// <summary>
        /// The XML name of the <see cref="MetatrafficUnicastLocatorList"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string MetatrafficUnicastLocatorListPropertyName = "metatrafficUnicastLocatorList";
        
        /// <summary>
        /// Gets or sets the MetatrafficUnicastLocatorList.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The MetatrafficUnicastLocatorList.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Rtps.Discovery.MetatrafficUnicastLocatorListPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Rtps.LocatorAddrs MetatrafficUnicastLocatorList
        {
            get
            {
                return ((global::Doopec.Configuration.Rtps.LocatorAddrs)(base[global::Doopec.Configuration.Rtps.Discovery.MetatrafficUnicastLocatorListPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Rtps.Discovery.MetatrafficUnicastLocatorListPropertyName] = value;
            }
        }
        #endregion
        
        #region MetatrafficMulticastLocatorList Property
        /// <summary>
        /// The XML name of the <see cref="MetatrafficMulticastLocatorList"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string MetatrafficMulticastLocatorListPropertyName = "metatrafficMulticastLocatorList";
        
        /// <summary>
        /// Gets or sets a network address specifying the multicast group to be used for SPDP discovery. This overrides the interoperability group of the specification. It ca be used, for example, to specify use of a routed group address to provide a larger discovery scope.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("A network address specifying the multicast group to be used for SPDP discovery. T" +
            "his overrides the interoperability group of the specification. It ca be used, fo" +
            "r example, to specify use of a routed group address to provide a larger discover" +
            "y scope.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Rtps.Discovery.MetatrafficMulticastLocatorListPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Rtps.LocatorAddrs MetatrafficMulticastLocatorList
        {
            get
            {
                return ((global::Doopec.Configuration.Rtps.LocatorAddrs)(base[global::Doopec.Configuration.Rtps.Discovery.MetatrafficMulticastLocatorListPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Rtps.Discovery.MetatrafficMulticastLocatorListPropertyName] = value;
            }
        }
        #endregion
        
        #region ParticipantGain Property
        /// <summary>
        /// The XML name of the <see cref="ParticipantGain"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ParticipantGainPropertyName = "participantGain";
        
        /// <summary>
        /// Gets or sets an integer that assists in configuring SPDP Unicast ports and serves as an offset multiplier as participants are assigned addresses using the formula: PB + DG * domainId + d1 + PG * participantId (see section 9.6.1.1 in the OMG DDS-RTPS specification in how these Endpoints are constructed)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute(@"An integer that assists in configuring SPDP Unicast ports and serves as an offset multiplier as participants are assigned addresses using the formula: PB + DG * domainId + d1 + PG * participantId (see section 9.6.1.1 in the OMG DDS-RTPS specification in how these Endpoints are constructed)")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Rtps.Discovery.ParticipantGainPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Rtps.PortGain ParticipantGain
        {
            get
            {
                return ((global::Doopec.Configuration.Rtps.PortGain)(base[global::Doopec.Configuration.Rtps.Discovery.ParticipantGainPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Rtps.Discovery.ParticipantGainPropertyName] = value;
            }
        }
        #endregion
        
        #region DefaultUnicastLocatorList Property
        /// <summary>
        /// The XML name of the <see cref="DefaultUnicastLocatorList"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string DefaultUnicastLocatorListPropertyName = "defaultUnicastLocatorList";
        
        /// <summary>
        /// Gets or sets the DefaultUnicastLocatorList.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The DefaultUnicastLocatorList.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Rtps.Discovery.DefaultUnicastLocatorListPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Rtps.LocatorAddrs DefaultUnicastLocatorList
        {
            get
            {
                return ((global::Doopec.Configuration.Rtps.LocatorAddrs)(base[global::Doopec.Configuration.Rtps.Discovery.DefaultUnicastLocatorListPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Rtps.Discovery.DefaultUnicastLocatorListPropertyName] = value;
            }
        }
        #endregion
        
        #region DefaultMulticastLocatorList Property
        /// <summary>
        /// The XML name of the <see cref="DefaultMulticastLocatorList"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string DefaultMulticastLocatorListPropertyName = "defaultMulticastLocatorList";
        
        /// <summary>
        /// Gets or sets a network address specifying the multicast group to be used for SPDP discovery. This overrides the interoperability group of the specification. It ca be used, for example, to specify use of a routed group address to provide a larger discovery scope.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("A network address specifying the multicast group to be used for SPDP discovery. T" +
            "his overrides the interoperability group of the specification. It ca be used, fo" +
            "r example, to specify use of a routed group address to provide a larger discover" +
            "y scope.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Rtps.Discovery.DefaultMulticastLocatorListPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Rtps.LocatorAddrs DefaultMulticastLocatorList
        {
            get
            {
                return ((global::Doopec.Configuration.Rtps.LocatorAddrs)(base[global::Doopec.Configuration.Rtps.Discovery.DefaultMulticastLocatorListPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Rtps.Discovery.DefaultMulticastLocatorListPropertyName] = value;
            }
        }
        #endregion
        
        #region OffsetUserTrafficUnicast Property
        /// <summary>
        /// The XML name of the <see cref="OffsetUserTrafficUnicast"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string OffsetUserTrafficUnicastPropertyName = "offsetUserTrafficUnicast";
        
        /// <summary>
        /// Gets or sets d0. An integer value that assists in providing an offset for calculating an assignable port in SPDP Multicast configurations. The formula used is: PB + DG * domainId + d0 (see section 9.6.1.1 in the OMG DDS-RTPS specification in how these Endpoints are constructed)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute(@"D0. An integer value that assists in providing an offset for calculating an assignable port in SPDP Multicast configurations. The formula used is: PB + DG * domainId + d0 (see section 9.6.1.1 in the OMG DDS-RTPS specification in how these Endpoints are constructed)")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Rtps.Discovery.OffsetUserTrafficUnicastPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Rtps.OffsetUnicast OffsetUserTrafficUnicast
        {
            get
            {
                return ((global::Doopec.Configuration.Rtps.OffsetUnicast)(base[global::Doopec.Configuration.Rtps.Discovery.OffsetUserTrafficUnicastPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Rtps.Discovery.OffsetUserTrafficUnicastPropertyName] = value;
            }
        }
        #endregion
        
        #region OffsetUserTrafficMulticast Property
        /// <summary>
        /// The XML name of the <see cref="OffsetUserTrafficMulticast"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string OffsetUserTrafficMulticastPropertyName = "offsetUserTrafficMulticast";
        
        /// <summary>
        /// Gets or sets d1. An integer value that assists in providing an offset for calculating an assignable port in SPDP Unicast configurations. The formula used is: PB + DG * domainId + d1 + PG * participantId (see section 9.6.1.1 in the OMG DDS-RTPS specification in how these Endpoints are constructed)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute(@"D1. An integer value that assists in providing an offset for calculating an assignable port in SPDP Unicast configurations. The formula used is: PB + DG * domainId + d1 + PG * participantId (see section 9.6.1.1 in the OMG DDS-RTPS specification in how these Endpoints are constructed)")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Rtps.Discovery.OffsetUserTrafficMulticastPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Rtps.OffsetMulticast OffsetUserTrafficMulticast
        {
            get
            {
                return ((global::Doopec.Configuration.Rtps.OffsetMulticast)(base[global::Doopec.Configuration.Rtps.Discovery.OffsetUserTrafficMulticastPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Rtps.Discovery.OffsetUserTrafficMulticastPropertyName] = value;
            }
        }
        #endregion
        
        #region AvailableBuiltinEndpoints Property
        /// <summary>
        /// The XML name of the <see cref="AvailableBuiltinEndpoints"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string AvailableBuiltinEndpointsPropertyName = "availableBuiltinEndpoints";
        
        /// <summary>
        /// Gets or sets the AvailableBuiltinEndpoints.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The AvailableBuiltinEndpoints.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Rtps.Discovery.AvailableBuiltinEndpointsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Rtps.Generic_TODO AvailableBuiltinEndpoints
        {
            get
            {
                return ((global::Doopec.Configuration.Rtps.Generic_TODO)(base[global::Doopec.Configuration.Rtps.Discovery.AvailableBuiltinEndpointsPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Rtps.Discovery.AvailableBuiltinEndpointsPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Rtps
{
    
    
    /// <summary>
    /// The ResendPeriod Configuration Element.
    /// </summary>
    public partial class ResendPeriod : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Val Property
        /// <summary>
        /// The XML name of the <see cref="Val"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ValPropertyName = "val";
        
        /// <summary>
        /// Gets or sets the Val.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Val.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Rtps.ResendPeriod.ValPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false, DefaultValue=30000L)]
        public virtual long Val
        {
            get
            {
                return ((long)(base[global::Doopec.Configuration.Rtps.ResendPeriod.ValPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Rtps.ResendPeriod.ValPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Dds
{
    
    
    /// <summary>
    /// The QoS Configuration Element.
    /// </summary>
    public partial class QoS : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.QoS.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::Doopec.Configuration.Dds.QoS.NamePropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.QoS.NamePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Rtps
{
    
    
    /// <summary>
    /// The PortBase Configuration Element.
    /// </summary>
    public partial class PortBase : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Val Property
        /// <summary>
        /// The XML name of the <see cref="Val"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ValPropertyName = "val";
        
        /// <summary>
        /// Gets or sets the Val.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Val.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Rtps.PortBase.ValPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false, DefaultValue=7400)]
        public virtual int Val
        {
            get
            {
                return ((int)(base[global::Doopec.Configuration.Rtps.PortBase.ValPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Rtps.PortBase.ValPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Rtps
{
    
    
    /// <summary>
    /// The PortGain Configuration Element.
    /// </summary>
    public partial class PortGain : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Val Property
        /// <summary>
        /// The XML name of the <see cref="Val"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ValPropertyName = "val";
        
        /// <summary>
        /// Gets or sets the Val.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Val.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Rtps.PortGain.ValPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false, DefaultValue=250)]
        public virtual int Val
        {
            get
            {
                return ((int)(base[global::Doopec.Configuration.Rtps.PortGain.ValPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Rtps.PortGain.ValPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Rtps
{
    
    
    /// <summary>
    /// The OffsetUnicast Configuration Element.
    /// </summary>
    public partial class OffsetUnicast : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Val Property
        /// <summary>
        /// The XML name of the <see cref="Val"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ValPropertyName = "val";
        
        /// <summary>
        /// Gets or sets the Val.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Val.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Rtps.OffsetUnicast.ValPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false, DefaultValue=2)]
        public virtual int Val
        {
            get
            {
                return ((int)(base[global::Doopec.Configuration.Rtps.OffsetUnicast.ValPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Rtps.OffsetUnicast.ValPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Rtps
{
    
    
    /// <summary>
    /// The OffsetMulticast Configuration Element.
    /// </summary>
    public partial class OffsetMulticast : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Val Property
        /// <summary>
        /// The XML name of the <see cref="Val"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ValPropertyName = "val";
        
        /// <summary>
        /// Gets or sets the Val.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Val.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Rtps.OffsetMulticast.ValPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false, DefaultValue=0)]
        public virtual int Val
        {
            get
            {
                return ((int)(base[global::Doopec.Configuration.Rtps.OffsetMulticast.ValPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Rtps.OffsetMulticast.ValPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Rtps
{
    
    
    /// <summary>
    /// The UseSedpMulticast Configuration Element.
    /// </summary>
    public partial class UseSedpMulticast : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Val Property
        /// <summary>
        /// The XML name of the <see cref="Val"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ValPropertyName = "val";
        
        /// <summary>
        /// Gets or sets the Val.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Val.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Rtps.UseSedpMulticast.ValPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false, DefaultValue=true)]
        public virtual bool Val
        {
            get
            {
                return ((bool)(base[global::Doopec.Configuration.Rtps.UseSedpMulticast.ValPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Rtps.UseSedpMulticast.ValPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Rtps
{
    
    
    /// <summary>
    /// The LocatorAddrs Configuration Element.
    /// </summary>
    public partial class LocatorAddrs : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Val Property
        /// <summary>
        /// The XML name of the <see cref="Val"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ValPropertyName = "val";
        
        /// <summary>
        /// Gets or sets the Val.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Val.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Rtps.LocatorAddrs.ValPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string Val
        {
            get
            {
                return ((string)(base[global::Doopec.Configuration.Rtps.LocatorAddrs.ValPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Rtps.LocatorAddrs.ValPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Rtps
{
    
    
    /// <summary>
    /// The TTL Configuration Element.
    /// </summary>
    public partial class TTL : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Val Property
        /// <summary>
        /// The XML name of the <see cref="Val"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ValPropertyName = "val";
        
        /// <summary>
        /// Gets or sets the Val.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Val.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Rtps.TTL.ValPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false, DefaultValue=1)]
        public virtual int Val
        {
            get
            {
                return ((int)(base[global::Doopec.Configuration.Rtps.TTL.ValPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Rtps.TTL.ValPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Dds
{
    
    
    /// <summary>
    /// The DomainParticipantQoS Configuration Element.
    /// </summary>
    public partial class DomainParticipantQoS : global::Doopec.Configuration.Dds.QoS
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region UserData Property
        /// <summary>
        /// The XML name of the <see cref="UserData"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string UserDataPropertyName = "userData";
        
        /// <summary>
        /// Gets or sets the UserData.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The UserData.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.DomainParticipantQoS.UserDataPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QosData UserData
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QosData)(base[global::Doopec.Configuration.Dds.DomainParticipantQoS.UserDataPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.DomainParticipantQoS.UserDataPropertyName] = value;
            }
        }
        #endregion
        
        #region EntityFactory Property
        /// <summary>
        /// The XML name of the <see cref="EntityFactory"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string EntityFactoryPropertyName = "entityFactory";
        
        /// <summary>
        /// Gets or sets the EntityFactory.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The EntityFactory.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.DomainParticipantQoS.EntityFactoryPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSEntityFactory EntityFactory
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSEntityFactory)(base[global::Doopec.Configuration.Dds.DomainParticipantQoS.EntityFactoryPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.DomainParticipantQoS.EntityFactoryPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Dds
{
    
    
    /// <summary>
    /// The QosData Configuration Element.
    /// </summary>
    public partial class QosData : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Value Property
        /// <summary>
        /// The XML name of the <see cref="Value"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ValuePropertyName = "value";
        
        /// <summary>
        /// Gets or sets the Value.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Value.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.QosData.ValuePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string Value
        {
            get
            {
                return ((string)(base[global::Doopec.Configuration.Dds.QosData.ValuePropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.QosData.ValuePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Dds
{
    
    
    /// <summary>
    /// The QoSEntityFactory Configuration Element.
    /// </summary>
    public partial class QoSEntityFactory : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region AutoenableCreatedEntities Property
        /// <summary>
        /// The XML name of the <see cref="AutoenableCreatedEntities"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string AutoenableCreatedEntitiesPropertyName = "autoenableCreatedEntities";
        
        /// <summary>
        /// Gets or sets the AutoenableCreatedEntities.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The AutoenableCreatedEntities.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.QoSEntityFactory.AutoenableCreatedEntitiesPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false, DefaultValue=true)]
        public virtual bool AutoenableCreatedEntities
        {
            get
            {
                return ((bool)(base[global::Doopec.Configuration.Dds.QoSEntityFactory.AutoenableCreatedEntitiesPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.QoSEntityFactory.AutoenableCreatedEntitiesPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Dds
{
    
    
    /// <summary>
    /// The PublisherQoS Configuration Element.
    /// </summary>
    public partial class PublisherQoS : global::Doopec.Configuration.Dds.QoS
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region GroupData Property
        /// <summary>
        /// The XML name of the <see cref="GroupData"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string GroupDataPropertyName = "groupData";
        
        /// <summary>
        /// Gets or sets the GroupData.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The GroupData.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.PublisherQoS.GroupDataPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QosData GroupData
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QosData)(base[global::Doopec.Configuration.Dds.PublisherQoS.GroupDataPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.PublisherQoS.GroupDataPropertyName] = value;
            }
        }
        #endregion
        
        #region Presentation Property
        /// <summary>
        /// The XML name of the <see cref="Presentation"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string PresentationPropertyName = "presentation";
        
        /// <summary>
        /// Gets or sets the Presentation.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Presentation.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.PublisherQoS.PresentationPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSPresentation Presentation
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSPresentation)(base[global::Doopec.Configuration.Dds.PublisherQoS.PresentationPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.PublisherQoS.PresentationPropertyName] = value;
            }
        }
        #endregion
        
        #region Partition Property
        /// <summary>
        /// The XML name of the <see cref="Partition"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string PartitionPropertyName = "partition";
        
        /// <summary>
        /// Gets or sets the Partition.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Partition.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.PublisherQoS.PartitionPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSPartition Partition
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSPartition)(base[global::Doopec.Configuration.Dds.PublisherQoS.PartitionPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.PublisherQoS.PartitionPropertyName] = value;
            }
        }
        #endregion
        
        #region EntityFactory Property
        /// <summary>
        /// The XML name of the <see cref="EntityFactory"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string EntityFactoryPropertyName = "entityFactory";
        
        /// <summary>
        /// Gets or sets the EntityFactory.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The EntityFactory.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.PublisherQoS.EntityFactoryPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSEntityFactory EntityFactory
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSEntityFactory)(base[global::Doopec.Configuration.Dds.PublisherQoS.EntityFactoryPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.PublisherQoS.EntityFactoryPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Dds
{
    
    
    /// <summary>
    /// The QoSPresentation Configuration Element.
    /// </summary>
    public partial class QoSPresentation : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region AccessScope Property
        /// <summary>
        /// The XML name of the <see cref="AccessScope"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string AccessScopePropertyName = "accessScope";
        
        /// <summary>
        /// Gets or sets the AccessScope.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The AccessScope.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.QoSPresentation.AccessScopePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false, DefaultValue=AccessScope.INSTANCE)]
        public virtual global::Doopec.Configuration.AccessScope AccessScope
        {
            get
            {
                return ((global::Doopec.Configuration.AccessScope)(base[global::Doopec.Configuration.Dds.QoSPresentation.AccessScopePropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.QoSPresentation.AccessScopePropertyName] = value;
            }
        }
        #endregion
        
        #region CoherentAccess Property
        /// <summary>
        /// The XML name of the <see cref="CoherentAccess"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string CoherentAccessPropertyName = "coherentAccess";
        
        /// <summary>
        /// Gets or sets the CoherentAccess.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The CoherentAccess.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.QoSPresentation.CoherentAccessPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual bool CoherentAccess
        {
            get
            {
                return ((bool)(base[global::Doopec.Configuration.Dds.QoSPresentation.CoherentAccessPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.QoSPresentation.CoherentAccessPropertyName] = value;
            }
        }
        #endregion
        
        #region OrderedAccess Property
        /// <summary>
        /// The XML name of the <see cref="OrderedAccess"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string OrderedAccessPropertyName = "orderedAccess";
        
        /// <summary>
        /// Gets or sets the OrderedAccess.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The OrderedAccess.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.QoSPresentation.OrderedAccessPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual bool OrderedAccess
        {
            get
            {
                return ((bool)(base[global::Doopec.Configuration.Dds.QoSPresentation.OrderedAccessPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.QoSPresentation.OrderedAccessPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Dds
{
    
    
    /// <summary>
    /// The SubscriberQoS Configuration Element.
    /// </summary>
    public partial class SubscriberQoS : global::Doopec.Configuration.Dds.QoS
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region GroupData Property
        /// <summary>
        /// The XML name of the <see cref="GroupData"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string GroupDataPropertyName = "groupData";
        
        /// <summary>
        /// Gets or sets the GroupData.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The GroupData.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.SubscriberQoS.GroupDataPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QosData GroupData
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QosData)(base[global::Doopec.Configuration.Dds.SubscriberQoS.GroupDataPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.SubscriberQoS.GroupDataPropertyName] = value;
            }
        }
        #endregion
        
        #region Presentation Property
        /// <summary>
        /// The XML name of the <see cref="Presentation"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string PresentationPropertyName = "presentation";
        
        /// <summary>
        /// Gets or sets the Presentation.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Presentation.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.SubscriberQoS.PresentationPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSPresentation Presentation
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSPresentation)(base[global::Doopec.Configuration.Dds.SubscriberQoS.PresentationPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.SubscriberQoS.PresentationPropertyName] = value;
            }
        }
        #endregion
        
        #region Partition Property
        /// <summary>
        /// The XML name of the <see cref="Partition"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string PartitionPropertyName = "partition";
        
        /// <summary>
        /// Gets or sets the Partition.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Partition.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.SubscriberQoS.PartitionPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QosData Partition
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QosData)(base[global::Doopec.Configuration.Dds.SubscriberQoS.PartitionPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.SubscriberQoS.PartitionPropertyName] = value;
            }
        }
        #endregion
        
        #region EntityFactory Property
        /// <summary>
        /// The XML name of the <see cref="EntityFactory"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string EntityFactoryPropertyName = "entityFactory";
        
        /// <summary>
        /// Gets or sets the EntityFactory.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The EntityFactory.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.SubscriberQoS.EntityFactoryPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSEntityFactory EntityFactory
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSEntityFactory)(base[global::Doopec.Configuration.Dds.SubscriberQoS.EntityFactoryPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.SubscriberQoS.EntityFactoryPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Dds
{
    
    
    /// <summary>
    /// The QoSProfilePolicy Configuration Element.
    /// </summary>
    public partial class QoSProfilePolicy : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.QoSProfilePolicy.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::Doopec.Configuration.Dds.QoSProfilePolicy.NamePropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.QoSProfilePolicy.NamePropertyName] = value;
            }
        }
        #endregion
        
        #region ExtendsQos Property
        /// <summary>
        /// The XML name of the <see cref="ExtendsQos"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ExtendsQosPropertyName = "extendsQos";
        
        /// <summary>
        /// Gets or sets the ExtendsQos.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The ExtendsQos.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.QoSProfilePolicy.ExtendsQosPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string ExtendsQos
        {
            get
            {
                return ((string)(base[global::Doopec.Configuration.Dds.QoSProfilePolicy.ExtendsQosPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.QoSProfilePolicy.ExtendsQosPropertyName] = value;
            }
        }
        #endregion
        
        #region DomainParticipantQos Property
        /// <summary>
        /// The XML name of the <see cref="DomainParticipantQos"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string DomainParticipantQosPropertyName = "domainParticipantQos";
        
        /// <summary>
        /// Gets or sets the DomainParticipantQos.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The DomainParticipantQos.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.QoSProfilePolicy.DomainParticipantQosPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.DomainParticipantQoS DomainParticipantQos
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.DomainParticipantQoS)(base[global::Doopec.Configuration.Dds.QoSProfilePolicy.DomainParticipantQosPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.QoSProfilePolicy.DomainParticipantQosPropertyName] = value;
            }
        }
        #endregion
        
        #region PublisherQoS Property
        /// <summary>
        /// The XML name of the <see cref="PublisherQoS"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string PublisherQoSPropertyName = "publisherQoS";
        
        /// <summary>
        /// Gets or sets the PublisherQoS.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The PublisherQoS.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.QoSProfilePolicy.PublisherQoSPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.PublisherQoS PublisherQoS
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.PublisherQoS)(base[global::Doopec.Configuration.Dds.QoSProfilePolicy.PublisherQoSPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.QoSProfilePolicy.PublisherQoSPropertyName] = value;
            }
        }
        #endregion
        
        #region SubscriberQoS Property
        /// <summary>
        /// The XML name of the <see cref="SubscriberQoS"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string SubscriberQoSPropertyName = "subscriberQoS";
        
        /// <summary>
        /// Gets or sets the SubscriberQoS.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The SubscriberQoS.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.QoSProfilePolicy.SubscriberQoSPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.SubscriberQoS SubscriberQoS
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.SubscriberQoS)(base[global::Doopec.Configuration.Dds.QoSProfilePolicy.SubscriberQoSPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.QoSProfilePolicy.SubscriberQoSPropertyName] = value;
            }
        }
        #endregion
        
        #region TopicQoS Property
        /// <summary>
        /// The XML name of the <see cref="TopicQoS"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string TopicQoSPropertyName = "topicQoS";
        
        /// <summary>
        /// Gets or sets the TopicQoS.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The TopicQoS.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.QoSProfilePolicy.TopicQoSPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.TopicQoS TopicQoS
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.TopicQoS)(base[global::Doopec.Configuration.Dds.QoSProfilePolicy.TopicQoSPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.QoSProfilePolicy.TopicQoSPropertyName] = value;
            }
        }
        #endregion
        
        #region DataWriterQoS Property
        /// <summary>
        /// The XML name of the <see cref="DataWriterQoS"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string DataWriterQoSPropertyName = "dataWriterQoS";
        
        /// <summary>
        /// Gets or sets the DataWriterQoS.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The DataWriterQoS.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.QoSProfilePolicy.DataWriterQoSPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.DataWriterQoS DataWriterQoS
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.DataWriterQoS)(base[global::Doopec.Configuration.Dds.QoSProfilePolicy.DataWriterQoSPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.QoSProfilePolicy.DataWriterQoSPropertyName] = value;
            }
        }
        #endregion
        
        #region DataReaderQoS Property
        /// <summary>
        /// The XML name of the <see cref="DataReaderQoS"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string DataReaderQoSPropertyName = "dataReaderQoS";
        
        /// <summary>
        /// Gets or sets the DataReaderQoS.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The DataReaderQoS.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.QoSProfilePolicy.DataReaderQoSPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.DataReaderQoS DataReaderQoS
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.DataReaderQoS)(base[global::Doopec.Configuration.Dds.QoSProfilePolicy.DataReaderQoSPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.QoSProfilePolicy.DataReaderQoSPropertyName] = value;
            }
        }
        #endregion
        
        #region DomainParticipantFactoryQos Property
        /// <summary>
        /// The XML name of the <see cref="DomainParticipantFactoryQos"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string DomainParticipantFactoryQosPropertyName = "domainParticipantFactoryQos";
        
        /// <summary>
        /// Gets or sets the DomainParticipantFactoryQos.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The DomainParticipantFactoryQos.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.QoSProfilePolicy.DomainParticipantFactoryQosPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.DomainParticipantFactoryQoS DomainParticipantFactoryQos
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.DomainParticipantFactoryQoS)(base[global::Doopec.Configuration.Dds.QoSProfilePolicy.DomainParticipantFactoryQosPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.QoSProfilePolicy.DomainParticipantFactoryQosPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Dds
{
    
    
    /// <summary>
    /// The TopicQoS Configuration Element.
    /// </summary>
    public partial class TopicQoS : global::Doopec.Configuration.Dds.QoS
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region TopicData Property
        /// <summary>
        /// The XML name of the <see cref="TopicData"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string TopicDataPropertyName = "topicData";
        
        /// <summary>
        /// Gets or sets the TopicData.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The TopicData.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.TopicQoS.TopicDataPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QosData TopicData
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QosData)(base[global::Doopec.Configuration.Dds.TopicQoS.TopicDataPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.TopicQoS.TopicDataPropertyName] = value;
            }
        }
        #endregion
        
        #region Durability Property
        /// <summary>
        /// The XML name of the <see cref="Durability"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string DurabilityPropertyName = "durability";
        
        /// <summary>
        /// Gets or sets the Durability.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Durability.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.TopicQoS.DurabilityPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSDurability Durability
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSDurability)(base[global::Doopec.Configuration.Dds.TopicQoS.DurabilityPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.TopicQoS.DurabilityPropertyName] = value;
            }
        }
        #endregion
        
        #region Deadline Property
        /// <summary>
        /// The XML name of the <see cref="Deadline"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string DeadlinePropertyName = "deadline";
        
        /// <summary>
        /// Gets or sets the Deadline.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Deadline.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.TopicQoS.DeadlinePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSDeadline Deadline
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSDeadline)(base[global::Doopec.Configuration.Dds.TopicQoS.DeadlinePropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.TopicQoS.DeadlinePropertyName] = value;
            }
        }
        #endregion
        
        #region Reliability Property
        /// <summary>
        /// The XML name of the <see cref="Reliability"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ReliabilityPropertyName = "reliability";
        
        /// <summary>
        /// Gets or sets the Reliability.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Reliability.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.TopicQoS.ReliabilityPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSReability Reliability
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSReability)(base[global::Doopec.Configuration.Dds.TopicQoS.ReliabilityPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.TopicQoS.ReliabilityPropertyName] = value;
            }
        }
        #endregion
        
        #region TransportPriority Property
        /// <summary>
        /// The XML name of the <see cref="TransportPriority"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string TransportPriorityPropertyName = "transportPriority";
        
        /// <summary>
        /// Gets or sets the TransportPriority.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The TransportPriority.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.TopicQoS.TransportPriorityPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSTransportPriority TransportPriority
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSTransportPriority)(base[global::Doopec.Configuration.Dds.TopicQoS.TransportPriorityPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.TopicQoS.TransportPriorityPropertyName] = value;
            }
        }
        #endregion
        
        #region History Property
        /// <summary>
        /// The XML name of the <see cref="History"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string HistoryPropertyName = "history";
        
        /// <summary>
        /// Gets or sets the History.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The History.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.TopicQoS.HistoryPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSHistory History
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSHistory)(base[global::Doopec.Configuration.Dds.TopicQoS.HistoryPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.TopicQoS.HistoryPropertyName] = value;
            }
        }
        #endregion
        
        #region DurabilityService Property
        /// <summary>
        /// The XML name of the <see cref="DurabilityService"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string DurabilityServicePropertyName = "durabilityService";
        
        /// <summary>
        /// Gets or sets the DurabilityService.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The DurabilityService.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.TopicQoS.DurabilityServicePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSDurabilityService DurabilityService
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSDurabilityService)(base[global::Doopec.Configuration.Dds.TopicQoS.DurabilityServicePropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.TopicQoS.DurabilityServicePropertyName] = value;
            }
        }
        #endregion
        
        #region LatencyBudget Property
        /// <summary>
        /// The XML name of the <see cref="LatencyBudget"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string LatencyBudgetPropertyName = "latencyBudget";
        
        /// <summary>
        /// Gets or sets the LatencyBudget.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The LatencyBudget.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.TopicQoS.LatencyBudgetPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSLatencyBudget LatencyBudget
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSLatencyBudget)(base[global::Doopec.Configuration.Dds.TopicQoS.LatencyBudgetPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.TopicQoS.LatencyBudgetPropertyName] = value;
            }
        }
        #endregion
        
        #region Ownership Property
        /// <summary>
        /// The XML name of the <see cref="Ownership"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string OwnershipPropertyName = "ownership";
        
        /// <summary>
        /// Gets or sets the Ownership.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Ownership.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.TopicQoS.OwnershipPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSOwnership Ownership
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSOwnership)(base[global::Doopec.Configuration.Dds.TopicQoS.OwnershipPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.TopicQoS.OwnershipPropertyName] = value;
            }
        }
        #endregion
        
        #region Liveliness Property
        /// <summary>
        /// The XML name of the <see cref="Liveliness"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string LivelinessPropertyName = "liveliness";
        
        /// <summary>
        /// Gets or sets the Liveliness.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Liveliness.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.TopicQoS.LivelinessPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSLiveliness Liveliness
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSLiveliness)(base[global::Doopec.Configuration.Dds.TopicQoS.LivelinessPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.TopicQoS.LivelinessPropertyName] = value;
            }
        }
        #endregion
        
        #region Lifespan Property
        /// <summary>
        /// The XML name of the <see cref="Lifespan"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string LifespanPropertyName = "lifespan";
        
        /// <summary>
        /// Gets or sets the Lifespan.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Lifespan.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.TopicQoS.LifespanPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSLifespan Lifespan
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSLifespan)(base[global::Doopec.Configuration.Dds.TopicQoS.LifespanPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.TopicQoS.LifespanPropertyName] = value;
            }
        }
        #endregion
        
        #region DestinationOrder Property
        /// <summary>
        /// The XML name of the <see cref="DestinationOrder"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string DestinationOrderPropertyName = "destinationOrder";
        
        /// <summary>
        /// Gets or sets the DestinationOrder.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The DestinationOrder.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.TopicQoS.DestinationOrderPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSDestinationOrder DestinationOrder
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSDestinationOrder)(base[global::Doopec.Configuration.Dds.TopicQoS.DestinationOrderPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.TopicQoS.DestinationOrderPropertyName] = value;
            }
        }
        #endregion
        
        #region ResourceLimits Property
        /// <summary>
        /// The XML name of the <see cref="ResourceLimits"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ResourceLimitsPropertyName = "resourceLimits";
        
        /// <summary>
        /// Gets or sets the ResourceLimits.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The ResourceLimits.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.TopicQoS.ResourceLimitsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSResourceLimits ResourceLimits
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSResourceLimits)(base[global::Doopec.Configuration.Dds.TopicQoS.ResourceLimitsPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.TopicQoS.ResourceLimitsPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Dds
{
    
    
    /// <summary>
    /// The QoSDurability Configuration Element.
    /// </summary>
    public partial class QoSDurability : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Kind Property
        /// <summary>
        /// The XML name of the <see cref="Kind"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string KindPropertyName = "kind";
        
        /// <summary>
        /// Gets or sets the Kind.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Kind.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.QoSDurability.KindPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false, DefaultValue=Durability.VOLATILE)]
        public virtual global::Doopec.Configuration.Durability Kind
        {
            get
            {
                return ((global::Doopec.Configuration.Durability)(base[global::Doopec.Configuration.Dds.QoSDurability.KindPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.QoSDurability.KindPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Dds
{
    
    
    /// <summary>
    /// The DataWriterQoS Configuration Element.
    /// </summary>
    public partial class DataWriterQoS : global::Doopec.Configuration.Dds.QoS
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region UserData Property
        /// <summary>
        /// The XML name of the <see cref="UserData"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string UserDataPropertyName = "userData";
        
        /// <summary>
        /// Gets or sets the UserData.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The UserData.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.DataWriterQoS.UserDataPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QosData UserData
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QosData)(base[global::Doopec.Configuration.Dds.DataWriterQoS.UserDataPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.DataWriterQoS.UserDataPropertyName] = value;
            }
        }
        #endregion
        
        #region Durability Property
        /// <summary>
        /// The XML name of the <see cref="Durability"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string DurabilityPropertyName = "durability";
        
        /// <summary>
        /// Gets or sets the Durability.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Durability.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.DataWriterQoS.DurabilityPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSDurability Durability
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSDurability)(base[global::Doopec.Configuration.Dds.DataWriterQoS.DurabilityPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.DataWriterQoS.DurabilityPropertyName] = value;
            }
        }
        #endregion
        
        #region Deadline Property
        /// <summary>
        /// The XML name of the <see cref="Deadline"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string DeadlinePropertyName = "deadline";
        
        /// <summary>
        /// Gets or sets the Deadline.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Deadline.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.DataWriterQoS.DeadlinePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSDeadline Deadline
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSDeadline)(base[global::Doopec.Configuration.Dds.DataWriterQoS.DeadlinePropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.DataWriterQoS.DeadlinePropertyName] = value;
            }
        }
        #endregion
        
        #region Reliability Property
        /// <summary>
        /// The XML name of the <see cref="Reliability"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ReliabilityPropertyName = "reliability";
        
        /// <summary>
        /// Gets or sets the Reliability.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Reliability.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.DataWriterQoS.ReliabilityPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSReability Reliability
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSReability)(base[global::Doopec.Configuration.Dds.DataWriterQoS.ReliabilityPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.DataWriterQoS.ReliabilityPropertyName] = value;
            }
        }
        #endregion
        
        #region TransportPriority Property
        /// <summary>
        /// The XML name of the <see cref="TransportPriority"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string TransportPriorityPropertyName = "transportPriority";
        
        /// <summary>
        /// Gets or sets the TransportPriority.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The TransportPriority.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.DataWriterQoS.TransportPriorityPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSTransportPriority TransportPriority
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSTransportPriority)(base[global::Doopec.Configuration.Dds.DataWriterQoS.TransportPriorityPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.DataWriterQoS.TransportPriorityPropertyName] = value;
            }
        }
        #endregion
        
        #region History Property
        /// <summary>
        /// The XML name of the <see cref="History"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string HistoryPropertyName = "history";
        
        /// <summary>
        /// Gets or sets the History.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The History.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.DataWriterQoS.HistoryPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSHistory History
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSHistory)(base[global::Doopec.Configuration.Dds.DataWriterQoS.HistoryPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.DataWriterQoS.HistoryPropertyName] = value;
            }
        }
        #endregion
        
        #region DurabilityService Property
        /// <summary>
        /// The XML name of the <see cref="DurabilityService"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string DurabilityServicePropertyName = "durabilityService";
        
        /// <summary>
        /// Gets or sets the DurabilityService.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The DurabilityService.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.DataWriterQoS.DurabilityServicePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSDurabilityService DurabilityService
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSDurabilityService)(base[global::Doopec.Configuration.Dds.DataWriterQoS.DurabilityServicePropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.DataWriterQoS.DurabilityServicePropertyName] = value;
            }
        }
        #endregion
        
        #region LatencyBudget Property
        /// <summary>
        /// The XML name of the <see cref="LatencyBudget"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string LatencyBudgetPropertyName = "latencyBudget";
        
        /// <summary>
        /// Gets or sets the LatencyBudget.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The LatencyBudget.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.DataWriterQoS.LatencyBudgetPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSLatencyBudget LatencyBudget
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSLatencyBudget)(base[global::Doopec.Configuration.Dds.DataWriterQoS.LatencyBudgetPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.DataWriterQoS.LatencyBudgetPropertyName] = value;
            }
        }
        #endregion
        
        #region Ownership Property
        /// <summary>
        /// The XML name of the <see cref="Ownership"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string OwnershipPropertyName = "ownership";
        
        /// <summary>
        /// Gets or sets the Ownership.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Ownership.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.DataWriterQoS.OwnershipPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSOwnership Ownership
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSOwnership)(base[global::Doopec.Configuration.Dds.DataWriterQoS.OwnershipPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.DataWriterQoS.OwnershipPropertyName] = value;
            }
        }
        #endregion
        
        #region OwnershipStrength Property
        /// <summary>
        /// The XML name of the <see cref="OwnershipStrength"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string OwnershipStrengthPropertyName = "ownershipStrength";
        
        /// <summary>
        /// Gets or sets the OwnershipStrength.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The OwnershipStrength.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.DataWriterQoS.OwnershipStrengthPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSOwnershipStrength OwnershipStrength
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSOwnershipStrength)(base[global::Doopec.Configuration.Dds.DataWriterQoS.OwnershipStrengthPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.DataWriterQoS.OwnershipStrengthPropertyName] = value;
            }
        }
        #endregion
        
        #region Liveliness Property
        /// <summary>
        /// The XML name of the <see cref="Liveliness"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string LivelinessPropertyName = "liveliness";
        
        /// <summary>
        /// Gets or sets the Liveliness.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Liveliness.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.DataWriterQoS.LivelinessPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSLiveliness Liveliness
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSLiveliness)(base[global::Doopec.Configuration.Dds.DataWriterQoS.LivelinessPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.DataWriterQoS.LivelinessPropertyName] = value;
            }
        }
        #endregion
        
        #region Lifespan Property
        /// <summary>
        /// The XML name of the <see cref="Lifespan"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string LifespanPropertyName = "lifespan";
        
        /// <summary>
        /// Gets or sets the Lifespan.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Lifespan.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.DataWriterQoS.LifespanPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSLifespan Lifespan
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSLifespan)(base[global::Doopec.Configuration.Dds.DataWriterQoS.LifespanPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.DataWriterQoS.LifespanPropertyName] = value;
            }
        }
        #endregion
        
        #region DestinationOrder Property
        /// <summary>
        /// The XML name of the <see cref="DestinationOrder"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string DestinationOrderPropertyName = "destinationOrder";
        
        /// <summary>
        /// Gets or sets the DestinationOrder.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The DestinationOrder.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.DataWriterQoS.DestinationOrderPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSDestinationOrder DestinationOrder
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSDestinationOrder)(base[global::Doopec.Configuration.Dds.DataWriterQoS.DestinationOrderPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.DataWriterQoS.DestinationOrderPropertyName] = value;
            }
        }
        #endregion
        
        #region ResourceLimits Property
        /// <summary>
        /// The XML name of the <see cref="ResourceLimits"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ResourceLimitsPropertyName = "resourceLimits";
        
        /// <summary>
        /// Gets or sets the ResourceLimits.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The ResourceLimits.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.DataWriterQoS.ResourceLimitsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSResourceLimits ResourceLimits
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSResourceLimits)(base[global::Doopec.Configuration.Dds.DataWriterQoS.ResourceLimitsPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.DataWriterQoS.ResourceLimitsPropertyName] = value;
            }
        }
        #endregion
        
        #region WriterDataLifecycle Property
        /// <summary>
        /// The XML name of the <see cref="WriterDataLifecycle"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string WriterDataLifecyclePropertyName = "writerDataLifecycle";
        
        /// <summary>
        /// Gets or sets the WriterDataLifecycle.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The WriterDataLifecycle.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.DataWriterQoS.WriterDataLifecyclePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSWriterDataLifecycle WriterDataLifecycle
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSWriterDataLifecycle)(base[global::Doopec.Configuration.Dds.DataWriterQoS.WriterDataLifecyclePropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.DataWriterQoS.WriterDataLifecyclePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Dds
{
    
    
    /// <summary>
    /// The DataReaderQoS Configuration Element.
    /// </summary>
    public partial class DataReaderQoS : global::Doopec.Configuration.Dds.QoS
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region UserData Property
        /// <summary>
        /// The XML name of the <see cref="UserData"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string UserDataPropertyName = "userData";
        
        /// <summary>
        /// Gets or sets the UserData.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The UserData.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.DataReaderQoS.UserDataPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QosData UserData
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QosData)(base[global::Doopec.Configuration.Dds.DataReaderQoS.UserDataPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.DataReaderQoS.UserDataPropertyName] = value;
            }
        }
        #endregion
        
        #region Durability Property
        /// <summary>
        /// The XML name of the <see cref="Durability"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string DurabilityPropertyName = "durability";
        
        /// <summary>
        /// Gets or sets the Durability.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Durability.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.DataReaderQoS.DurabilityPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSDurability Durability
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSDurability)(base[global::Doopec.Configuration.Dds.DataReaderQoS.DurabilityPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.DataReaderQoS.DurabilityPropertyName] = value;
            }
        }
        #endregion
        
        #region Deadline Property
        /// <summary>
        /// The XML name of the <see cref="Deadline"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string DeadlinePropertyName = "deadline";
        
        /// <summary>
        /// Gets or sets the Deadline.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Deadline.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.DataReaderQoS.DeadlinePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSDeadline Deadline
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSDeadline)(base[global::Doopec.Configuration.Dds.DataReaderQoS.DeadlinePropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.DataReaderQoS.DeadlinePropertyName] = value;
            }
        }
        #endregion
        
        #region Reliability Property
        /// <summary>
        /// The XML name of the <see cref="Reliability"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ReliabilityPropertyName = "reliability";
        
        /// <summary>
        /// Gets or sets the Reliability.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Reliability.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.DataReaderQoS.ReliabilityPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSReability Reliability
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSReability)(base[global::Doopec.Configuration.Dds.DataReaderQoS.ReliabilityPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.DataReaderQoS.ReliabilityPropertyName] = value;
            }
        }
        #endregion
        
        #region History Property
        /// <summary>
        /// The XML name of the <see cref="History"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string HistoryPropertyName = "history";
        
        /// <summary>
        /// Gets or sets the History.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The History.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.DataReaderQoS.HistoryPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSHistory History
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSHistory)(base[global::Doopec.Configuration.Dds.DataReaderQoS.HistoryPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.DataReaderQoS.HistoryPropertyName] = value;
            }
        }
        #endregion
        
        #region LatencyBudget Property
        /// <summary>
        /// The XML name of the <see cref="LatencyBudget"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string LatencyBudgetPropertyName = "latencyBudget";
        
        /// <summary>
        /// Gets or sets the LatencyBudget.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The LatencyBudget.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.DataReaderQoS.LatencyBudgetPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSLatencyBudget LatencyBudget
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSLatencyBudget)(base[global::Doopec.Configuration.Dds.DataReaderQoS.LatencyBudgetPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.DataReaderQoS.LatencyBudgetPropertyName] = value;
            }
        }
        #endregion
        
        #region Ownership Property
        /// <summary>
        /// The XML name of the <see cref="Ownership"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string OwnershipPropertyName = "ownership";
        
        /// <summary>
        /// Gets or sets the Ownership.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Ownership.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.DataReaderQoS.OwnershipPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSOwnership Ownership
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSOwnership)(base[global::Doopec.Configuration.Dds.DataReaderQoS.OwnershipPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.DataReaderQoS.OwnershipPropertyName] = value;
            }
        }
        #endregion
        
        #region Liveliness Property
        /// <summary>
        /// The XML name of the <see cref="Liveliness"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string LivelinessPropertyName = "liveliness";
        
        /// <summary>
        /// Gets or sets the Liveliness.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Liveliness.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.DataReaderQoS.LivelinessPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSLiveliness Liveliness
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSLiveliness)(base[global::Doopec.Configuration.Dds.DataReaderQoS.LivelinessPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.DataReaderQoS.LivelinessPropertyName] = value;
            }
        }
        #endregion
        
        #region TimeBasedFilter Property
        /// <summary>
        /// The XML name of the <see cref="TimeBasedFilter"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string TimeBasedFilterPropertyName = "timeBasedFilter";
        
        /// <summary>
        /// Gets or sets the TimeBasedFilter.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The TimeBasedFilter.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.DataReaderQoS.TimeBasedFilterPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSTimeBasedFilter TimeBasedFilter
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSTimeBasedFilter)(base[global::Doopec.Configuration.Dds.DataReaderQoS.TimeBasedFilterPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.DataReaderQoS.TimeBasedFilterPropertyName] = value;
            }
        }
        #endregion
        
        #region DestinationOrder Property
        /// <summary>
        /// The XML name of the <see cref="DestinationOrder"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string DestinationOrderPropertyName = "destinationOrder";
        
        /// <summary>
        /// Gets or sets the DestinationOrder.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The DestinationOrder.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.DataReaderQoS.DestinationOrderPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSDestinationOrder DestinationOrder
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSDestinationOrder)(base[global::Doopec.Configuration.Dds.DataReaderQoS.DestinationOrderPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.DataReaderQoS.DestinationOrderPropertyName] = value;
            }
        }
        #endregion
        
        #region ResourceLimits Property
        /// <summary>
        /// The XML name of the <see cref="ResourceLimits"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ResourceLimitsPropertyName = "resourceLimits";
        
        /// <summary>
        /// Gets or sets the ResourceLimits.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The ResourceLimits.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.DataReaderQoS.ResourceLimitsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSResourceLimits ResourceLimits
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSResourceLimits)(base[global::Doopec.Configuration.Dds.DataReaderQoS.ResourceLimitsPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.DataReaderQoS.ResourceLimitsPropertyName] = value;
            }
        }
        #endregion
        
        #region ReaderDataLifecycle Property
        /// <summary>
        /// The XML name of the <see cref="ReaderDataLifecycle"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ReaderDataLifecyclePropertyName = "readerDataLifecycle";
        
        /// <summary>
        /// Gets or sets the ReaderDataLifecycle.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The ReaderDataLifecycle.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.DataReaderQoS.ReaderDataLifecyclePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSReaderDataLifecycle ReaderDataLifecycle
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSReaderDataLifecycle)(base[global::Doopec.Configuration.Dds.DataReaderQoS.ReaderDataLifecyclePropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.DataReaderQoS.ReaderDataLifecyclePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Dds
{
    
    
    /// <summary>
    /// Indicates the level of reliability offered/requested by the Service.
    /// </summary>
    public partial class QoSReability : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Kind Property
        /// <summary>
        /// The XML name of the <see cref="Kind"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string KindPropertyName = "kind";
        
        /// <summary>
        /// Gets or sets the Kind.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Kind.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.QoSReability.KindPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false, DefaultValue=Reliability.BEST_EFFORT)]
        public virtual global::Doopec.Configuration.Reliability Kind
        {
            get
            {
                return ((global::Doopec.Configuration.Reliability)(base[global::Doopec.Configuration.Dds.QoSReability.KindPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.QoSReability.KindPropertyName] = value;
            }
        }
        #endregion
        
        #region MaxBlockingTime Property
        /// <summary>
        /// The XML name of the <see cref="MaxBlockingTime"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string MaxBlockingTimePropertyName = "maxBlockingTime";
        
        /// <summary>
        /// Gets or sets the MaxBlockingTime.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The MaxBlockingTime.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.QoSReability.MaxBlockingTimePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual long MaxBlockingTime
        {
            get
            {
                return ((long)(base[global::Doopec.Configuration.Dds.QoSReability.MaxBlockingTimePropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.QoSReability.MaxBlockingTimePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Dds
{
    
    
    /// <summary>
    /// The QoSTransportPriority Configuration Element.
    /// </summary>
    public partial class QoSTransportPriority : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Value Property
        /// <summary>
        /// The XML name of the <see cref="Value"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ValuePropertyName = "value";
        
        /// <summary>
        /// Gets or sets the Value.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Value.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.QoSTransportPriority.ValuePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false, DefaultValue=0)]
        public virtual int Value
        {
            get
            {
                return ((int)(base[global::Doopec.Configuration.Dds.QoSTransportPriority.ValuePropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.QoSTransportPriority.ValuePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Dds
{
    
    
    /// <summary>
    /// The QoSHistory Configuration Element.
    /// </summary>
    public partial class QoSHistory : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Kind Property
        /// <summary>
        /// The XML name of the <see cref="Kind"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string KindPropertyName = "kind";
        
        /// <summary>
        /// Gets or sets the Kind.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Kind.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.QoSHistory.KindPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false, DefaultValue=History.KEEP_ALL)]
        public virtual global::Doopec.Configuration.History Kind
        {
            get
            {
                return ((global::Doopec.Configuration.History)(base[global::Doopec.Configuration.Dds.QoSHistory.KindPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.QoSHistory.KindPropertyName] = value;
            }
        }
        #endregion
        
        #region Depth Property
        /// <summary>
        /// The XML name of the <see cref="Depth"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string DepthPropertyName = "depth";
        
        /// <summary>
        /// Gets or sets the Depth.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Depth.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.QoSHistory.DepthPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual int Depth
        {
            get
            {
                return ((int)(base[global::Doopec.Configuration.Dds.QoSHistory.DepthPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.QoSHistory.DepthPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Rtps
{
    
    
    /// <summary>
    /// The RtpsWriter Configuration Element.
    /// </summary>
    public partial class RtpsWriter : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region PushMode Property
        /// <summary>
        /// The XML name of the <see cref="PushMode"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string PushModePropertyName = "pushMode";
        
        /// <summary>
        /// Gets or sets this configuration parameter affects how writer communicates changes to readers. If push-mode is false, writer will announce new data to readers by sending a Heartbeat message. If set to true, writer will send the changes to all matched readers directly.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("This configuration parameter affects how writer communicates changes to readers. " +
            "If push-mode is false, writer will announce new data to readers by sending a Hea" +
            "rtbeat message. If set to true, writer will send the changes to all matched read" +
            "ers directly.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Rtps.RtpsWriter.PushModePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Rtps.PushMode PushMode
        {
            get
            {
                return ((global::Doopec.Configuration.Rtps.PushMode)(base[global::Doopec.Configuration.Rtps.RtpsWriter.PushModePropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Rtps.RtpsWriter.PushModePropertyName] = value;
            }
        }
        #endregion
        
        #region HeartbeatPeriod Property
        /// <summary>
        /// The XML name of the <see cref="HeartbeatPeriod"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string HeartbeatPeriodPropertyName = "heartbeatPeriod";
        
        /// <summary>
        /// Gets or sets this configuration parameter tells how often writer will advertise the changes it has by sending a Heartbeat message. Note, that Heartbeats will be sent regardless of push-mode
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("This configuration parameter tells how often writer will advertise the changes it" +
            " has by sending a Heartbeat message. Note, that Heartbeats will be sent regardle" +
            "ss of push-mode")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Rtps.RtpsWriter.HeartbeatPeriodPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Rtps.HeartbeatPeriod HeartbeatPeriod
        {
            get
            {
                return ((global::Doopec.Configuration.Rtps.HeartbeatPeriod)(base[global::Doopec.Configuration.Rtps.RtpsWriter.HeartbeatPeriodPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Rtps.RtpsWriter.HeartbeatPeriodPropertyName] = value;
            }
        }
        #endregion
        
        #region NackResponseDelay Property
        /// <summary>
        /// The XML name of the <see cref="NackResponseDelay"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string NackResponseDelayPropertyName = "nackResponseDelay";
        
        /// <summary>
        /// Gets or sets when writer receives a AckNack message, it will wait nack-response-delay before it considers how to respond to reader.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("When writer receives a AckNack message, it will wait nack-response-delay before i" +
            "t considers how to respond to reader.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Rtps.RtpsWriter.NackResponseDelayPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Rtps.ResponseDelay NackResponseDelay
        {
            get
            {
                return ((global::Doopec.Configuration.Rtps.ResponseDelay)(base[global::Doopec.Configuration.Rtps.RtpsWriter.NackResponseDelayPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Rtps.RtpsWriter.NackResponseDelayPropertyName] = value;
            }
        }
        #endregion
        
        #region NackSuppressionDuration Property
        /// <summary>
        /// The XML name of the <see cref="NackSuppressionDuration"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string NackSuppressionDurationPropertyName = "nackSuppressionDuration";
        
        /// <summary>
        /// Gets or sets this parameter let's writer discard reception of AckNack message, if it arrives 'too soon'.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("This parameter let\'s writer discard reception of AckNack message, if it arrives \'" +
            "too soon\'.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Rtps.RtpsWriter.NackSuppressionDurationPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Rtps.SuppressionDuration NackSuppressionDuration
        {
            get
            {
                return ((global::Doopec.Configuration.Rtps.SuppressionDuration)(base[global::Doopec.Configuration.Rtps.RtpsWriter.NackSuppressionDurationPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Rtps.RtpsWriter.NackSuppressionDurationPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Rtps
{
    
    
    /// <summary>
    /// The RtpsReader Configuration Element.
    /// </summary>
    public partial class RtpsReader : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region HeartbeatResponseDelay Property
        /// <summary>
        /// The XML name of the <see cref="HeartbeatResponseDelay"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string HeartbeatResponseDelayPropertyName = "heartbeatResponseDelay";
        
        /// <summary>
        /// Gets or sets reader waits this amount of time before reacting on writers Heartbeat message.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("Reader waits this amount of time before reacting on writers Heartbeat message.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Rtps.RtpsReader.HeartbeatResponseDelayPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Rtps.ResponseDelay HeartbeatResponseDelay
        {
            get
            {
                return ((global::Doopec.Configuration.Rtps.ResponseDelay)(base[global::Doopec.Configuration.Rtps.RtpsReader.HeartbeatResponseDelayPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Rtps.RtpsReader.HeartbeatResponseDelayPropertyName] = value;
            }
        }
        #endregion
        
        #region HeartbeatSuppressionDuration Property
        /// <summary>
        /// The XML name of the <see cref="HeartbeatSuppressionDuration"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string HeartbeatSuppressionDurationPropertyName = "heartbeatSuppressionDuration";
        
        /// <summary>
        /// Gets or sets this parameter allows reader to discard reception Heartbeat messages that arrive 'too soon'.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("This parameter allows reader to discard reception Heartbeat messages that arrive " +
            "\'too soon\'.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Rtps.RtpsReader.HeartbeatSuppressionDurationPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Rtps.SuppressionDuration HeartbeatSuppressionDuration
        {
            get
            {
                return ((global::Doopec.Configuration.Rtps.SuppressionDuration)(base[global::Doopec.Configuration.Rtps.RtpsReader.HeartbeatSuppressionDurationPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Rtps.RtpsReader.HeartbeatSuppressionDurationPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Rtps
{
    
    
    /// <summary>
    /// The PushMode Configuration Element.
    /// </summary>
    public partial class PushMode : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Val Property
        /// <summary>
        /// The XML name of the <see cref="Val"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ValPropertyName = "val";
        
        /// <summary>
        /// Gets or sets the Val.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Val.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Rtps.PushMode.ValPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false, DefaultValue=true)]
        public virtual bool Val
        {
            get
            {
                return ((bool)(base[global::Doopec.Configuration.Rtps.PushMode.ValPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Rtps.PushMode.ValPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Rtps
{
    
    
    /// <summary>
    /// The HeartbeatPeriod Configuration Element.
    /// </summary>
    public partial class HeartbeatPeriod : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Val Property
        /// <summary>
        /// The XML name of the <see cref="Val"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ValPropertyName = "val";
        
        /// <summary>
        /// Gets or sets the Val.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Val.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Rtps.HeartbeatPeriod.ValPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false, DefaultValue=250)]
        public virtual int Val
        {
            get
            {
                return ((int)(base[global::Doopec.Configuration.Rtps.HeartbeatPeriod.ValPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Rtps.HeartbeatPeriod.ValPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Rtps
{
    
    
    /// <summary>
    /// The ResponseDelay Configuration Element.
    /// </summary>
    public partial class ResponseDelay : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Val Property
        /// <summary>
        /// The XML name of the <see cref="Val"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ValPropertyName = "val";
        
        /// <summary>
        /// Gets or sets the Val.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Val.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Rtps.ResponseDelay.ValPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false, DefaultValue=250)]
        public virtual int Val
        {
            get
            {
                return ((int)(base[global::Doopec.Configuration.Rtps.ResponseDelay.ValPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Rtps.ResponseDelay.ValPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Rtps
{
    
    
    /// <summary>
    /// The SuppressionDuration Configuration Element.
    /// </summary>
    public partial class SuppressionDuration : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Val Property
        /// <summary>
        /// The XML name of the <see cref="Val"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ValPropertyName = "val";
        
        /// <summary>
        /// Gets or sets the Val.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Val.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Rtps.SuppressionDuration.ValPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false, DefaultValue=250)]
        public virtual int Val
        {
            get
            {
                return ((int)(base[global::Doopec.Configuration.Rtps.SuppressionDuration.ValPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Rtps.SuppressionDuration.ValPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Dds
{
    
    
    /// <summary>
    /// The QoSLifespan Configuration Element.
    /// </summary>
    public partial class QoSLifespan : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Duration Property
        /// <summary>
        /// The XML name of the <see cref="Duration"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string DurationPropertyName = "duration";
        
        /// <summary>
        /// Gets or sets the Duration.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Duration.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.QoSLifespan.DurationPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual int Duration
        {
            get
            {
                return ((int)(base[global::Doopec.Configuration.Dds.QoSLifespan.DurationPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.QoSLifespan.DurationPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Dds
{
    
    
    /// <summary>
    /// The QoSOwnership Configuration Element.
    /// </summary>
    public partial class QoSOwnership : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Kind Property
        /// <summary>
        /// The XML name of the <see cref="Kind"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string KindPropertyName = "kind";
        
        /// <summary>
        /// Gets or sets the Kind.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Kind.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.QoSOwnership.KindPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Ownership Kind
        {
            get
            {
                return ((global::Doopec.Configuration.Ownership)(base[global::Doopec.Configuration.Dds.QoSOwnership.KindPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.QoSOwnership.KindPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Dds
{
    
    
    /// <summary>
    /// The QoSOwnershipStrength Configuration Element.
    /// </summary>
    public partial class QoSOwnershipStrength : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Value Property
        /// <summary>
        /// The XML name of the <see cref="Value"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ValuePropertyName = "value";
        
        /// <summary>
        /// Gets or sets the Value.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Value.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.QoSOwnershipStrength.ValuePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual int Value
        {
            get
            {
                return ((int)(base[global::Doopec.Configuration.Dds.QoSOwnershipStrength.ValuePropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.QoSOwnershipStrength.ValuePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Dds
{
    
    
    /// <summary>
    /// The QoSWriterDataLifecycle Configuration Element.
    /// </summary>
    public partial class QoSWriterDataLifecycle : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region AutodisposeUnregisteredInstances Property
        /// <summary>
        /// The XML name of the <see cref="AutodisposeUnregisteredInstances"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string AutodisposeUnregisteredInstancesPropertyName = "autodisposeUnregisteredInstances";
        
        /// <summary>
        /// Gets or sets the AutodisposeUnregisteredInstances.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The AutodisposeUnregisteredInstances.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.QoSWriterDataLifecycle.AutodisposeUnregisteredInstancesPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual bool AutodisposeUnregisteredInstances
        {
            get
            {
                return ((bool)(base[global::Doopec.Configuration.Dds.QoSWriterDataLifecycle.AutodisposeUnregisteredInstancesPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.QoSWriterDataLifecycle.AutodisposeUnregisteredInstancesPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Dds
{
    
    
    /// <summary>
    /// The QoSReaderDataLifecycle Configuration Element.
    /// </summary>
    public partial class QoSReaderDataLifecycle : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region AutopurgeDisposedSamplesDelay Property
        /// <summary>
        /// The XML name of the <see cref="AutopurgeDisposedSamplesDelay"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string AutopurgeDisposedSamplesDelayPropertyName = "autopurgeDisposedSamplesDelay";
        
        /// <summary>
        /// Gets or sets the AutopurgeDisposedSamplesDelay.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The AutopurgeDisposedSamplesDelay.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.QoSReaderDataLifecycle.AutopurgeDisposedSamplesDelayPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual long AutopurgeDisposedSamplesDelay
        {
            get
            {
                return ((long)(base[global::Doopec.Configuration.Dds.QoSReaderDataLifecycle.AutopurgeDisposedSamplesDelayPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.QoSReaderDataLifecycle.AutopurgeDisposedSamplesDelayPropertyName] = value;
            }
        }
        #endregion
        
        #region AutopurgeNowriterSamplesDelay Property
        /// <summary>
        /// The XML name of the <see cref="AutopurgeNowriterSamplesDelay"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string AutopurgeNowriterSamplesDelayPropertyName = "autopurgeNowriterSamplesDelay";
        
        /// <summary>
        /// Gets or sets the AutopurgeNowriterSamplesDelay.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The AutopurgeNowriterSamplesDelay.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.QoSReaderDataLifecycle.AutopurgeNowriterSamplesDelayPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual long AutopurgeNowriterSamplesDelay
        {
            get
            {
                return ((long)(base[global::Doopec.Configuration.Dds.QoSReaderDataLifecycle.AutopurgeNowriterSamplesDelayPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.QoSReaderDataLifecycle.AutopurgeNowriterSamplesDelayPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Dds
{
    
    
    /// <summary>
    /// The QoSLatencyBudget Configuration Element.
    /// </summary>
    public partial class QoSLatencyBudget : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Duration Property
        /// <summary>
        /// The XML name of the <see cref="Duration"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string DurationPropertyName = "duration";
        
        /// <summary>
        /// Gets or sets the Duration.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Duration.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.QoSLatencyBudget.DurationPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual long Duration
        {
            get
            {
                return ((long)(base[global::Doopec.Configuration.Dds.QoSLatencyBudget.DurationPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.QoSLatencyBudget.DurationPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Dds
{
    
    
    /// <summary>
    /// The QoSDeadline Configuration Element.
    /// </summary>
    public partial class QoSDeadline : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Period Property
        /// <summary>
        /// The XML name of the <see cref="Period"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string PeriodPropertyName = "period";
        
        /// <summary>
        /// Gets or sets the Period.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Period.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.QoSDeadline.PeriodPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual long Period
        {
            get
            {
                return ((long)(base[global::Doopec.Configuration.Dds.QoSDeadline.PeriodPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.QoSDeadline.PeriodPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Dds
{
    
    
    /// <summary>
    /// The QoSTimeBasedFilter Configuration Element.
    /// </summary>
    public partial class QoSTimeBasedFilter : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region MinimumSeparation Property
        /// <summary>
        /// The XML name of the <see cref="MinimumSeparation"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string MinimumSeparationPropertyName = "minimumSeparation";
        
        /// <summary>
        /// Gets or sets the MinimumSeparation.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The MinimumSeparation.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.QoSTimeBasedFilter.MinimumSeparationPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual long MinimumSeparation
        {
            get
            {
                return ((long)(base[global::Doopec.Configuration.Dds.QoSTimeBasedFilter.MinimumSeparationPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.QoSTimeBasedFilter.MinimumSeparationPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Dds
{
    
    
    /// <summary>
    /// The QoSPartition Configuration Element.
    /// </summary>
    public partial class QoSPartition : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Value Property
        /// <summary>
        /// The XML name of the <see cref="Value"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ValuePropertyName = "value";
        
        /// <summary>
        /// Gets or sets the Value.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Value.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.QoSPartition.ValuePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string Value
        {
            get
            {
                return ((string)(base[global::Doopec.Configuration.Dds.QoSPartition.ValuePropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.QoSPartition.ValuePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Dds
{
    
    
    /// <summary>
    /// The QoSLiveliness Configuration Element.
    /// </summary>
    public partial class QoSLiveliness : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region LeaseDuration Property
        /// <summary>
        /// The XML name of the <see cref="LeaseDuration"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string LeaseDurationPropertyName = "leaseDuration";
        
        /// <summary>
        /// Gets or sets the LeaseDuration.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The LeaseDuration.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.QoSLiveliness.LeaseDurationPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false, DefaultValue=0L)]
        public virtual long LeaseDuration
        {
            get
            {
                return ((long)(base[global::Doopec.Configuration.Dds.QoSLiveliness.LeaseDurationPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.QoSLiveliness.LeaseDurationPropertyName] = value;
            }
        }
        #endregion
        
        #region Kind Property
        /// <summary>
        /// The XML name of the <see cref="Kind"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string KindPropertyName = "kind";
        
        /// <summary>
        /// Gets or sets the Kind.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Kind.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.QoSLiveliness.KindPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Liveliness Kind
        {
            get
            {
                return ((global::Doopec.Configuration.Liveliness)(base[global::Doopec.Configuration.Dds.QoSLiveliness.KindPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.QoSLiveliness.KindPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Dds
{
    
    
    /// <summary>
    /// The QoSResourceLimits Configuration Element.
    /// </summary>
    public partial class QoSResourceLimits : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region MaxSamples Property
        /// <summary>
        /// The XML name of the <see cref="MaxSamples"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string MaxSamplesPropertyName = "maxSamples";
        
        /// <summary>
        /// Gets or sets the MaxSamples.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The MaxSamples.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.QoSResourceLimits.MaxSamplesPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false, DefaultValue=0)]
        public virtual int MaxSamples
        {
            get
            {
                return ((int)(base[global::Doopec.Configuration.Dds.QoSResourceLimits.MaxSamplesPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.QoSResourceLimits.MaxSamplesPropertyName] = value;
            }
        }
        #endregion
        
        #region MaxInstances Property
        /// <summary>
        /// The XML name of the <see cref="MaxInstances"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string MaxInstancesPropertyName = "maxInstances";
        
        /// <summary>
        /// Gets or sets the MaxInstances.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The MaxInstances.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.QoSResourceLimits.MaxInstancesPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false, DefaultValue=0)]
        public virtual int MaxInstances
        {
            get
            {
                return ((int)(base[global::Doopec.Configuration.Dds.QoSResourceLimits.MaxInstancesPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.QoSResourceLimits.MaxInstancesPropertyName] = value;
            }
        }
        #endregion
        
        #region MaxSamplesPerInstance Property
        /// <summary>
        /// The XML name of the <see cref="MaxSamplesPerInstance"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string MaxSamplesPerInstancePropertyName = "maxSamplesPerInstance";
        
        /// <summary>
        /// Gets or sets the MaxSamplesPerInstance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The MaxSamplesPerInstance.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.QoSResourceLimits.MaxSamplesPerInstancePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual int MaxSamplesPerInstance
        {
            get
            {
                return ((int)(base[global::Doopec.Configuration.Dds.QoSResourceLimits.MaxSamplesPerInstancePropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.QoSResourceLimits.MaxSamplesPerInstancePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Dds
{
    
    
    /// <summary>
    /// The QoSDurabilityService Configuration Element.
    /// </summary>
    public partial class QoSDurabilityService : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region ServiceCleanupDelay Property
        /// <summary>
        /// The XML name of the <see cref="ServiceCleanupDelay"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ServiceCleanupDelayPropertyName = "serviceCleanupDelay";
        
        /// <summary>
        /// Gets or sets the ServiceCleanupDelay.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The ServiceCleanupDelay.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.QoSDurabilityService.ServiceCleanupDelayPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false, DefaultValue=0L)]
        public virtual long ServiceCleanupDelay
        {
            get
            {
                return ((long)(base[global::Doopec.Configuration.Dds.QoSDurabilityService.ServiceCleanupDelayPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.QoSDurabilityService.ServiceCleanupDelayPropertyName] = value;
            }
        }
        #endregion
        
        #region HistoryKind Property
        /// <summary>
        /// The XML name of the <see cref="HistoryKind"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string HistoryKindPropertyName = "historyKind";
        
        /// <summary>
        /// Gets or sets the HistoryKind.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The HistoryKind.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.QoSDurabilityService.HistoryKindPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false, DefaultValue=History.KEEP_LAST)]
        public virtual global::Doopec.Configuration.History HistoryKind
        {
            get
            {
                return ((global::Doopec.Configuration.History)(base[global::Doopec.Configuration.Dds.QoSDurabilityService.HistoryKindPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.QoSDurabilityService.HistoryKindPropertyName] = value;
            }
        }
        #endregion
        
        #region HistoryDepth Property
        /// <summary>
        /// The XML name of the <see cref="HistoryDepth"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string HistoryDepthPropertyName = "historyDepth";
        
        /// <summary>
        /// Gets or sets the HistoryDepth.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The HistoryDepth.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.QoSDurabilityService.HistoryDepthPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual int HistoryDepth
        {
            get
            {
                return ((int)(base[global::Doopec.Configuration.Dds.QoSDurabilityService.HistoryDepthPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.QoSDurabilityService.HistoryDepthPropertyName] = value;
            }
        }
        #endregion
        
        #region MaxSamples Property
        /// <summary>
        /// The XML name of the <see cref="MaxSamples"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string MaxSamplesPropertyName = "maxSamples";
        
        /// <summary>
        /// Gets or sets the MaxSamples.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The MaxSamples.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.QoSDurabilityService.MaxSamplesPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual int MaxSamples
        {
            get
            {
                return ((int)(base[global::Doopec.Configuration.Dds.QoSDurabilityService.MaxSamplesPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.QoSDurabilityService.MaxSamplesPropertyName] = value;
            }
        }
        #endregion
        
        #region MaxInstances Property
        /// <summary>
        /// The XML name of the <see cref="MaxInstances"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string MaxInstancesPropertyName = "maxInstances";
        
        /// <summary>
        /// Gets or sets the MaxInstances.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The MaxInstances.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.QoSDurabilityService.MaxInstancesPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual int MaxInstances
        {
            get
            {
                return ((int)(base[global::Doopec.Configuration.Dds.QoSDurabilityService.MaxInstancesPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.QoSDurabilityService.MaxInstancesPropertyName] = value;
            }
        }
        #endregion
        
        #region MaxSamplesPerInstance Property
        /// <summary>
        /// The XML name of the <see cref="MaxSamplesPerInstance"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string MaxSamplesPerInstancePropertyName = "maxSamplesPerInstance";
        
        /// <summary>
        /// Gets or sets the MaxSamplesPerInstance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The MaxSamplesPerInstance.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.QoSDurabilityService.MaxSamplesPerInstancePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual int MaxSamplesPerInstance
        {
            get
            {
                return ((int)(base[global::Doopec.Configuration.Dds.QoSDurabilityService.MaxSamplesPerInstancePropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.QoSDurabilityService.MaxSamplesPerInstancePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Dds
{
    
    
    /// <summary>
    /// The QoSDestinationOrder Configuration Element.
    /// </summary>
    public partial class QoSDestinationOrder : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Kind Property
        /// <summary>
        /// The XML name of the <see cref="Kind"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string KindPropertyName = "kind";
        
        /// <summary>
        /// Gets or sets the Kind.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Kind.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.QoSDestinationOrder.KindPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false, DefaultValue=DestinationOrder.BY_RECEPTION_TIMESTAMP)]
        public virtual global::Doopec.Configuration.DestinationOrder Kind
        {
            get
            {
                return ((global::Doopec.Configuration.DestinationOrder)(base[global::Doopec.Configuration.Dds.QoSDestinationOrder.KindPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.QoSDestinationOrder.KindPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Dds
{
    
    
    /// <summary>
    /// The DomainParticipantFactoryQoS Configuration Element.
    /// </summary>
    public partial class DomainParticipantFactoryQoS : global::Doopec.Configuration.Dds.QoS
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region EntityFactory Property
        /// <summary>
        /// The XML name of the <see cref="EntityFactory"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string EntityFactoryPropertyName = "entityFactory";
        
        /// <summary>
        /// Gets or sets the EntityFactory.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The EntityFactory.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.DomainParticipantFactoryQoS.EntityFactoryPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.Dds.QoSEntityFactory EntityFactory
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSEntityFactory)(base[global::Doopec.Configuration.Dds.DomainParticipantFactoryQoS.EntityFactoryPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.DomainParticipantFactoryQoS.EntityFactoryPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Dds
{
    
    
    /// <summary>
    /// The TransportProfile Configuration Element.
    /// </summary>
    public partial class TransportProfile : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.TransportProfile.NamePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::Doopec.Configuration.Dds.TransportProfile.NamePropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.TransportProfile.NamePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Rtps
{
    
    
    /// <summary>
    /// The Generic_TODO Configuration Element.
    /// </summary>
    public partial class Generic_TODO : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Val Property
        /// <summary>
        /// The XML name of the <see cref="Val"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ValPropertyName = "val";
        
        /// <summary>
        /// Gets or sets the Val.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Val.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Rtps.Generic_TODO.ValPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string Val
        {
            get
            {
                return ((string)(base[global::Doopec.Configuration.Rtps.Generic_TODO.ValPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Rtps.Generic_TODO.ValPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Dds
{
    
    
    /// <summary>
    /// The BoostrapType Configuration Element.
    /// </summary>
    public partial class BoostrapType : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Type Property
        /// <summary>
        /// The XML name of the <see cref="Type"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string TypePropertyName = "type";
        
        /// <summary>
        /// Gets or sets the Type.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Type.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.BoostrapType.TypePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string Type
        {
            get
            {
                return ((string)(base[global::Doopec.Configuration.Dds.BoostrapType.TypePropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.BoostrapType.TypePropertyName] = value;
            }
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.BoostrapType.NamePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::Doopec.Configuration.Dds.BoostrapType.NamePropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.BoostrapType.NamePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Dds
{
    
    
    /// <summary>
    /// A collection of QoSProfilePolicy instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Doopec.Configuration.Dds.QoSProfilePolicy), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::Doopec.Configuration.Dds.QoSProfiles.QoSProfilePolicyPropertyName)]
    public partial class QoSProfiles : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Doopec.Configuration.Dds.QoSProfilePolicy"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string QoSProfilePolicyPropertyName = "qoSProfileDef";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override string ElementName
        {
            get
            {
                return global::Doopec.Configuration.Dds.QoSProfiles.QoSProfilePolicyPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Doopec.Configuration.Dds.QoSProfiles.QoSProfilePolicyPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Doopec.Configuration.Dds.QoSProfilePolicy)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Doopec.Configuration.Dds.QoSProfilePolicy"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Doopec.Configuration.Dds.QoSProfilePolicy"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Doopec.Configuration.Dds.QoSProfilePolicy();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Doopec.Configuration.Dds.QoSProfilePolicy"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Doopec.Configuration.Dds.QoSProfilePolicy"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Doopec.Configuration.Dds.QoSProfilePolicy this[int index]
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSProfilePolicy)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Doopec.Configuration.Dds.QoSProfilePolicy"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Doopec.Configuration.Dds.QoSProfilePolicy"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Doopec.Configuration.Dds.QoSProfilePolicy this[object name]
        {
            get
            {
                return ((global::Doopec.Configuration.Dds.QoSProfilePolicy)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Doopec.Configuration.Dds.QoSProfilePolicy"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="qoSProfileDef">The <see cref="global::Doopec.Configuration.Dds.QoSProfilePolicy"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Add(global::Doopec.Configuration.Dds.QoSProfilePolicy qoSProfileDef)
        {
            base.BaseAdd(qoSProfileDef);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Doopec.Configuration.Dds.QoSProfilePolicy"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="qoSProfileDef">The <see cref="global::Doopec.Configuration.Dds.QoSProfilePolicy"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Remove(global::Doopec.Configuration.Dds.QoSProfilePolicy qoSProfileDef)
        {
            base.BaseRemove(this.GetElementKey(qoSProfileDef));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Doopec.Configuration.Dds.QoSProfilePolicy"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Doopec.Configuration.Dds.QoSProfilePolicy"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Doopec.Configuration.Dds.QoSProfilePolicy GetItemAt(int index)
        {
            return ((global::Doopec.Configuration.Dds.QoSProfilePolicy)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Doopec.Configuration.Dds.QoSProfilePolicy"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Doopec.Configuration.Dds.QoSProfilePolicy"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Doopec.Configuration.Dds.QoSProfilePolicy GetItemByKey(string name)
        {
            return ((global::Doopec.Configuration.Dds.QoSProfilePolicy)(base.BaseGet(((object)(name)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region IncludeFile Property
        /// <summary>
        /// The XML name of the <see cref="IncludeFile"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string IncludeFilePropertyName = "includeFile";
        
        /// <summary>
        /// Gets or sets the IncludeFile.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The IncludeFile.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.QoSProfiles.IncludeFilePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string IncludeFile
        {
            get
            {
                return ((string)(base[global::Doopec.Configuration.Dds.QoSProfiles.IncludeFilePropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.QoSProfiles.IncludeFilePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Dds
{
    
    
    /// <summary>
    /// The QoSProfile Configuration Element.
    /// </summary>
    public partial class QoSProfile : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.QoSProfile.NamePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::Doopec.Configuration.Dds.QoSProfile.NamePropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.QoSProfile.NamePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration.Dds
{
    
    
    /// <summary>
    /// The GuiKind Configuration Element.
    /// </summary>
    public partial class GuiKind : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Kind Property
        /// <summary>
        /// The XML name of the <see cref="Kind"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string KindPropertyName = "kind";
        
        /// <summary>
        /// Gets or sets the Kind.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Kind.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.GuiKind.KindPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Doopec.Configuration.GuiKind Kind
        {
            get
            {
                return ((global::Doopec.Configuration.GuiKind)(base[global::Doopec.Configuration.Dds.GuiKind.KindPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.GuiKind.KindPropertyName] = value;
            }
        }
        #endregion
        
        #region Val Property
        /// <summary>
        /// The XML name of the <see cref="Val"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ValPropertyName = "val";
        
        /// <summary>
        /// Gets or sets the Val.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Val.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Doopec.Configuration.Dds.GuiKind.ValPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string Val
        {
            get
            {
                return ((string)(base[global::Doopec.Configuration.Dds.GuiKind.ValPropertyName]));
            }
            set
            {
                base[global::Doopec.Configuration.Dds.GuiKind.ValPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Doopec.Configuration
{
    
    
    /// <summary>
    /// LogLevel.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
    public enum LogLevel
    {
        
        /// <summary>
        /// ALL.
        /// </summary>
        ALL = 0,
        
        /// <summary>
        /// DEBUG.
        /// </summary>
        DEBUG = 1,
        
        /// <summary>
        /// WARN.
        /// </summary>
        WARN = 3,
        
        /// <summary>
        /// INFO.
        /// </summary>
        INFO = 2,
        
        /// <summary>
        /// ERROR.
        /// </summary>
        ERROR,
        
        /// <summary>
        /// FATAL.
        /// </summary>
        FATAL,
        
        /// <summary>
        /// OFF.
        /// </summary>
        OFF,
    }
}
namespace Doopec.Configuration
{
    
    
    /// <summary>
    /// Durability.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
    public enum Durability
    {
        
        /// <summary>
        /// VOLATILE.
        /// </summary>
        VOLATILE,
        
        /// <summary>
        /// TRANSIENT_LOCAL.
        /// </summary>
        TRANSIENT_LOCAL,
        
        /// <summary>
        /// TRANSIENT.
        /// </summary>
        TRANSIENT,
        
        /// <summary>
        /// PERSISTENT.
        /// </summary>
        PERSISTENT,
    }
}
namespace Doopec.Configuration
{
    
    
    /// <summary>
    /// Reliability.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
    public enum Reliability
    {
        
        /// <summary>
        /// BEST_EFFORT.
        /// </summary>
        BEST_EFFORT,
        
        /// <summary>
        /// RELIABLE.
        /// </summary>
        RELIABLE,
    }
}
namespace Doopec.Configuration
{
    
    
    /// <summary>
    /// History.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
    public enum History
    {
        
        /// <summary>
        /// KEEP_LAST.
        /// </summary>
        KEEP_LAST,
        
        /// <summary>
        /// KEEP_ALL.
        /// </summary>
        KEEP_ALL,
    }
}
namespace Doopec.Configuration
{
    
    
    /// <summary>
    /// DataRepresentation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
    public enum DataRepresentation
    {
        
        /// <summary>
        /// XCDR_DATA_REPRESENTATION.
        /// </summary>
        XCDR_DATA_REPRESENTATION = 0,
        
        /// <summary>
        /// XML_DATA_REPRESENTATION.
        /// </summary>
        XML_DATA_REPRESENTATION = 1,
    }
}
namespace Doopec.Configuration
{
    
    
    /// <summary>
    /// DestinationOrder.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
    public enum DestinationOrder
    {
        
        /// <summary>
        /// BY_SOURCE_TIMESTAMP.
        /// </summary>
        BY_SOURCE_TIMESTAMP,
        
        /// <summary>
        /// BY_RECEPTION_TIMESTAMP.
        /// </summary>
        BY_RECEPTION_TIMESTAMP,
    }
}
namespace Doopec.Configuration
{
    
    
    /// <summary>
    /// Liveliness.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
    public enum Liveliness
    {
        
        /// <summary>
        /// AUTOMATIC.
        /// </summary>
        AUTOMATIC,
        
        /// <summary>
        /// MANUAL_BY_PARTICIPANT.
        /// </summary>
        MANUAL_BY_PARTICIPANT,
        
        /// <summary>
        /// MANUAL_BY_TOPIC.
        /// </summary>
        MANUAL_BY_TOPIC,
    }
}
namespace Doopec.Configuration
{
    
    
    /// <summary>
    /// Ownership.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
    public enum Ownership
    {
        
        /// <summary>
        /// SHARED.
        /// </summary>
        SHARED,
        
        /// <summary>
        /// EXCLUSIVE.
        /// </summary>
        EXCLUSIVE,
    }
}
namespace Doopec.Configuration
{
    
    
    /// <summary>
    /// AccessScope.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
    public enum AccessScope
    {
        
        /// <summary>
        /// INSTANCE.
        /// </summary>
        INSTANCE,
        
        /// <summary>
        /// GROUP.
        /// </summary>
        GROUP,
        
        /// <summary>
        /// TOPIC.
        /// </summary>
        TOPIC,
    }
}
namespace Doopec.Configuration
{
    
    
    /// <summary>
    /// TypeConsistencyEnforcement.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
    public enum TypeConsistencyEnforcement
    {
        
        /// <summary>
        /// EXACT_TYPE_TYPE_CONSISTENCY.
        /// </summary>
        EXACT_TYPE_TYPE_CONSISTENCY = 0,
        
        /// <summary>
        /// EXACT_NAME_TYPE_CONSISTENCY.
        /// </summary>
        EXACT_NAME_TYPE_CONSISTENCY = 1,
        
        /// <summary>
        /// DECLARED_TYPE_CONSISTENCY.
        /// </summary>
        DECLARED_TYPE_CONSISTENCY = 2,
        
        /// <summary>
        /// ASSIGNABLE_TYPE_CONSISTENCY.
        /// </summary>
        ASSIGNABLE_TYPE_CONSISTENCY = 3,
    }
}
namespace Doopec.Configuration
{
    
    
    /// <summary>
    /// GuiKind.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
    public enum GuiKind
    {
        
        /// <summary>
        /// Fixed.
        /// </summary>
        Fixed,
        
        /// <summary>
        /// Random.
        /// </summary>
        Random,
        
        /// <summary>
        /// AutoId.
        /// </summary>
        AutoId,
        
        /// <summary>
        /// AutoIdFromIP.
        /// </summary>
        AutoIdFromIP,
        
        /// <summary>
        /// AutoIdFromMac.
        /// </summary>
        AutoIdFromMac,
    }
}
